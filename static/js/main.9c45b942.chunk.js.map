{"version":3,"sources":["utilities/utilities.ts","modules/PrimaryHeader/PrimaryHeader.tsx","constants/global.constants.ts","services/gotApi.service.ts","store/actions/services.actions.ts","hooks/useQuery.ts","components/Loader/Loader.tsx","components/Page/Page.tsx","components/DataTable/DataTable.tsx","components/Pagination/Pagination.tsx","containers/HomeContainer/HomeContainer.tsx","store/reducers/services.reducer.ts","modules/LinksList/LinksList.tsx","helpers/LinkCrawlHelper.tsx","containers/BookDetailsContainer/BookDetailsContainer.tsx","containers/HousesContainer/HousesContainer.tsx","containers/HouseDetailsContainer/HouseDetailsContainer.tsx","containers/CharactersContainer/CharactersContainer.tsx","containers/CharacterDetailsContainer/CharacterDetailsContainer.tsx","Routes.tsx","App.tsx","reportWebVitals.ts","store/reducers/layouts.reducer.ts","store/store.ts","index.tsx"],"names":["BookCoverSize","PrimaryHeader","React","forwardRef","props","ref","className","to","exact","activeClassName","ICE_FIRE_ENDPOINT_URL","process","OPEN_LIBRARY_COVER_URL","getBookCoverImageUrl","isbn","size","Small","isArrayEmptyOrNull","array","length","isStringEmptyOrNull","value","undefined","historyGoBack","window","history","back","getPageNumberFromUriParam","uri","pageNumber","URL","searchParams","get","getUriByRel","links","rel","filter","link","getLastPathnameFromUrl","url","pathname","split","getStringValueOrNa","forageStore","localforage","createInstance","driver","INDEXEDDB","LOCALSTORAGE","name","http","axios","create","baseURL","adapter","setupCache","maxAge","store","gotApi","getBooks","params","a","getBookById","id","getHouses","getHouseById","getCharacters","getCharacterById","getDataByUri","fetchGotBooks","createAsyncThunk","response","data","LinkHeader","parse","headers","refs","results","fetchGotBookById","fetchGotBooksByUri","fetchGotHouses","fetchGotHouseById","fetchGotCharacters","fetchGotCharacterById","useQuery","URLSearchParams","useLocation","search","Loader","type","color","height","width","timeout","Page","title","children","isLoading","cn","DataTable","columns","initialState","useTable","useFilters","useSortBy","getTableProps","getTableBodyProps","headerGroups","rows","prepareRow","map","headerGroup","getHeaderGroupProps","column","getHeaderProps","getSortByToggleProps","render","isSorted","isSortedDesc","canFilter","row","i","getRowProps","cells","cell","getCellProps","SelectColumnFilter","filterValue","setFilter","preFilteredRows","options","useMemo","Set","forEach","values","add","onChange","e","currentTarget","blur","onBlur","target","option","Pagination","pageCount","currentPage","pageSize","prevUri","nextUri","lastUri","useHistory","query","handleGotoPageByNumber","useCallback","number","preventDefault","set","push","toString","handleChangePageSize","onClick","disabled","Array","from","keys","index","HomeContainer","useSelector","state","layouts","books","services","dispatch","useDispatch","pageQuery","pageSizeQuery","useState","setState","useEffect","booksPromise","page","abort","Header","accessor","Cell","original","src","Medium","alt","format","Date","sortBy","desc","servicesSlice","createSlice","houses","characters","book","house","character","reducers","resetBookState","resetHouseState","resetCharacterState","extraReducers","fulfilled","payload","LinkCrawl","href","labelByProp","label","setLabel","source","CancelToken","cancelToken","token","then","catch","err","cancel","linkCrawlHelper","baseHref","linksCrawlHelper","uriArray","BookDetailsContainer","useParams","actions","promise","Breadcrumbs","IconButton","Paper","elevation","mediaType","numberOfPages","authors","join","publisher","country","released","povCharacters","HousesContainer","housesPromise","houseId","maxWidth","founded","founder","heir","titles","coatOfArms","words","swornMembers","HouseDetailsContainer","overlord","diedOut","region","ancestralWeapons","seats","currentLord","cadetBranches","CharactersContainer","characterId","aliases","alias","Filter","disableSortBy","father","mother","spouse","SelectBookFilter","bookUri","CharacterDetailsContainer","JSON","stringify","Routes","path","component","App","headerGroupRef","useRef","headerPinned","setHeaderPinned","handlePinHeader","handleUnPinHeader","current","headroom","Headroom","tolerance","up","down","onPin","onUnpin","init","destroy","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","setLoadingReducer","layoutsSlice","breakpoint","breakpointChange","action","pending","rejected","rootReducer","combineReducers","configureStore","reducer","theme","createMuiTheme","typography","fontFamily","ReactDOM","StrictMode","ThemeProvider","document","getElementById"],"mappings":"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","file":"static/js/main.9c45b942.chunk.js","sourcesContent":["import { OPEN_LIBRARY_COVER_URL } from '../constants'\n\nexport enum BookCoverSize {\n  Small = 'S',\n  Medium = 'M',\n  Large = 'L',\n}\n\n/**\n * Ruturns Open Library Image URL\n * @param isbn {String}\n * @param size {String}\n */\nexport const getBookCoverImageUrl = (isbn: string, size = BookCoverSize.Small): string =>\n  `${OPEN_LIBRARY_COVER_URL}/${isbn}-${size}.jpg`\n\n/**\n * Ruturns an array of paths\n * @param uri {String}\n * @returns {Array}\n */\nexport const getPathsFromUri = (uri: string): string[] => new URL(uri).pathname.split('/')\n\n/**\n * Returns true or false\n * @param array {Array}\n */\nexport const isArrayEmptyOrNull = (array: any[]): boolean => !array || (array && array.length === 0)\n\n/**\n * Returns last item of the array\n * @param array {Array}\n */\nexport const getArrayLastItem = (array: any[]): any => (!isArrayEmptyOrNull(array) ? array[array.length - 1] : null)\n\n/**\n * Returns true or false\n * @param value {String | null | undefined}\n */\nexport const isStringEmptyOrNull = (value: string | null | undefined): boolean =>\n  value === null || value === undefined || value?.length === 0\n\n/**\n * Go back in Browser History\n */\nexport const historyGoBack = (): void => {\n  window.history.back()\n}\n\n/**\n * Return the page number from url param\n * @param uri\n */\nexport const getPageNumberFromUriParam = (uri: string | null | undefined): number => {\n  const pageNumber = new URL(uri ?? '').searchParams.get('page')\n  return pageNumber ? +pageNumber : 0\n}\n\n/**\n * Filter Links for Uri by Rel value\n * @param links\n * @param rel\n */\nexport const getUriByRel = (links: any[], rel: string): string => {\n  const [link]: { uri: string; rel: string }[] = links.filter((link: any) => link.rel === rel)\n  return link ? link.uri : ''\n}\n\n/**\n * Extract the last path of url path\n * Returns String\n * @param url\n */\nexport const getLastPathnameFromUrl = (url: string): string | null => {\n  const pathname = new URL(url).pathname\n  return getArrayLastItem(pathname.split('/'))\n}\n\nexport const getStringValueOrNa = (value: any): string => (isStringEmptyOrNull(value) ? 'N/A' : value)\n","import React from 'react'\nimport { Link, NavLink } from 'react-router-dom'\n\nimport './primary-header.scss'\n\nexport const PrimaryHeader = React.forwardRef<HTMLHeadElement>((props, ref) => (\n  <header ref={ref} className=\"primary-header headroom\">\n    <div className=\"primary-header__container\">\n      <h1 className=\"primary-header__title\">\n        <Link to=\"/\">GOT</Link>\n      </h1>\n\n      <nav className=\"primary-header__nav\">\n        <NavLink exact to=\"/\" className=\"primary-header__nav__item\" activeClassName=\"primary-header__nav__item--active\">\n          Books\n        </NavLink>\n        <NavLink to=\"/houses\" className=\"primary-header__nav__item\" activeClassName=\"primary-header__nav__item--active\">\n          Houses\n        </NavLink>\n        <NavLink\n          to=\"/characters\"\n          className=\"primary-header__nav__item\"\n          activeClassName=\"primary-header__nav__item--active\"\n        >\n          Characters\n        </NavLink>\n      </nav>\n    </div>\n  </header>\n))\n","export const ICE_FIRE_ENDPOINT_URL = process.env.REACT_APP_GOT_ENDPOINT_URL\nexport const OPEN_LIBRARY_COVER_URL = process.env.REACT_APP_OPEN_LIBRARY_COVER_URL\nexport const REST_CACHE_LIFE = 1800000 // 30 minutes in milliseconds\n","import axios from 'axios'\nimport { setupCache } from 'axios-cache-adapter'\nimport localforage from 'localforage'\n\nimport { Pagination } from '../models'\nimport { ICE_FIRE_ENDPOINT_URL, REST_CACHE_LIFE } from '../constants'\n\nconst forageStore = localforage.createInstance({\n  driver: [localforage.INDEXEDDB, localforage.LOCALSTORAGE],\n  name: 'got-cache',\n})\n\nconst http = axios.create({\n  baseURL: ICE_FIRE_ENDPOINT_URL,\n  adapter: setupCache({ maxAge: REST_CACHE_LIFE, store: forageStore }).adapter,\n})\n\nexport const gotApi = {\n  getBooks: async (params?: Pagination) => {\n    return http.get(`${ICE_FIRE_ENDPOINT_URL}/books`, { params })\n  },\n  getBookById: async (id: string) => {\n    return http.get(`${ICE_FIRE_ENDPOINT_URL}/books/${id}`)\n  },\n  getHouses: async (params?: Pagination) => {\n    return http.get(`${ICE_FIRE_ENDPOINT_URL}/houses`, { params })\n  },\n  getHouseById: async (id?: string) => {\n    return http.get(`${ICE_FIRE_ENDPOINT_URL}/houses/${id}`)\n  },\n  getCharacters: async (params?: Pagination) => {\n    return http.get(`${ICE_FIRE_ENDPOINT_URL}/characters`, { params })\n  },\n  getCharacterById: async (id?: string) => {\n    return http.get(`${ICE_FIRE_ENDPOINT_URL}/characters/${id}`)\n  },\n  getDataByUri: async (uri: string, params = {}) => {\n    return http.get(uri, { ...params })\n  },\n}\n","import { createAsyncThunk } from '@reduxjs/toolkit'\nimport LinkHeader from 'http-link-header'\n\nimport { Pagination } from '../../models'\nimport { gotApi } from '../../services/gotApi.service'\n\nexport const fetchGotBooks = createAsyncThunk('@fetch/fetchGotBooks', async (params?: Pagination) => {\n  const response = await gotApi.getBooks(params)\n  const { data } = response\n  const { refs } = LinkHeader.parse(response.headers.link)\n  return { results: data, links: refs }\n})\n\nexport const fetchGotBookById = createAsyncThunk('@fetch/fetchGotBookById', async (id: string) => {\n  const response = await gotApi.getBookById(id)\n  const { data } = response\n  return data\n})\n\nexport const fetchGotBooksByUri = createAsyncThunk('@fetch/fetchGotBooksByUri', async (uri: string) => {\n  const response = await gotApi.getDataByUri(uri)\n  const { data } = response\n  const { refs } = LinkHeader.parse(response.headers.link)\n  return { results: data, links: refs }\n})\n\nexport const fetchGotHouses = createAsyncThunk('@fetch/fetchGotHouses', async (params?: Pagination) => {\n  const response = await gotApi.getHouses(params)\n  const { data } = response\n  const { refs } = LinkHeader.parse(response.headers.link)\n  return { results: data, links: refs }\n})\n\nexport const fetchGotHouseById = createAsyncThunk('@fetch/fetchGotHouseById', async (id: string) => {\n  const response = await gotApi.getHouseById(id)\n  const { data } = response\n  return data\n})\n\nexport const fetchGotCharacters = createAsyncThunk('@fetch/getGotCharacters', async (params?: Pagination) => {\n  const response = await gotApi.getCharacters(params)\n  const { data } = response\n  const { refs } = LinkHeader.parse(response.headers.link)\n  return { results: data, links: refs }\n})\n\nexport const fetchGotCharacterById = createAsyncThunk('@fetch/fetchGotCharacterById', async (id: string) => {\n  const response = await gotApi.getCharacterById(id)\n  const { data } = response\n  return data\n})\n","import { useLocation } from 'react-router-dom'\n\nexport const useQuery = () => {\n  return new URLSearchParams(useLocation().search)\n}\n","import React from 'react'\nimport { default as Progress } from 'react-loader-spinner'\n\nimport './loader.scss'\n\nexport const Loader = () => (\n  <div className=\"page-loader\">\n    <Progress type=\"ThreeDots\" color=\"#00BFFF\" height={100} width={100} timeout={3000} />\n  </div>\n)\n","import React from 'react'\nimport { Helmet } from 'react-helmet-async'\nimport cn from 'classnames'\n\nimport Loader from '../Loader'\n\ntype PageProps = {\n  title?: string\n  children: any\n  isLoading?: boolean\n  className?: string\n}\n\nexport const Page = ({ title, children, isLoading, className }: PageProps) => {\n  return (\n    <div className={cn('page', { [`${className}`]: className })}>\n      {isLoading ? (\n        <Loader />\n      ) : (\n        <>\n          <Helmet>\n            <title>{title}</title>\n          </Helmet>\n          {children}\n        </>\n      )}\n    </div>\n  )\n}\n","import React from 'react'\nimport { useTable, useSortBy, useFilters } from 'react-table'\nimport { TiArrowSortedDown, TiArrowSortedUp } from 'react-icons/ti'\n\nimport { isStringEmptyOrNull } from '../../utilities'\n\nimport './data-table.scss'\n\nconst namespace = 'data-table'\n\ninterface DataTableProps {\n  columns: any[]\n  data: any[]\n  initialState?: any\n}\n\nexport const DataTable = ({ columns, data, initialState }: DataTableProps) => {\n  const { getTableProps, getTableBodyProps, headerGroups, rows, prepareRow } = useTable(\n    {\n      columns,\n      data,\n      initialState,\n    },\n    useFilters,\n    useSortBy\n  )\n\n  return (\n    <div className={namespace}>\n      <table {...getTableProps()}>\n        <thead>\n          {headerGroups.map(headerGroup => (\n            <tr {...headerGroup.getHeaderGroupProps()}>\n              {headerGroup.headers.map((column: any) => (\n                <th {...column.getHeaderProps(column.getSortByToggleProps())}>\n                  <span className=\"header-label\">{column.render('Header')}</span>\n                  {column?.isSorted && (\n                    <span className=\"data-table__sort-icon\">\n                      {column?.isSortedDesc ? <TiArrowSortedDown /> : <TiArrowSortedUp />}\n                    </span>\n                  )}\n                  {column?.canFilter && column.filter && column.render('Filter')}\n                </th>\n              ))}\n            </tr>\n          ))}\n        </thead>\n        <tbody {...getTableBodyProps()}>\n          {rows.map((row, i) => {\n            prepareRow(row)\n            return (\n              <tr {...row.getRowProps()}>\n                {row.cells.map(cell => {\n                  return <td {...cell.getCellProps()}>{cell.render('Cell')}</td>\n                })}\n              </tr>\n            )\n          })}\n        </tbody>\n      </table>\n    </div>\n  )\n}\n\nexport const SelectColumnFilter = ({ column: { filterValue, setFilter, preFilteredRows, id } }: any) => {\n  const options = React.useMemo(() => {\n    const options: any = new Set()\n    preFilteredRows.forEach((row: any) => {\n      !isStringEmptyOrNull(row.values[id]) && options.add(row.values[id])\n    })\n    return [...options]\n  }, [id, preFilteredRows])\n\n  return (\n    <select\n      value={filterValue}\n      onChange={e => e.currentTarget.blur()}\n      onBlur={e => {\n        setFilter(e.target.value || undefined)\n      }}\n    >\n      <option value=\"\">All</option>\n      {options.map((option, i) => (\n        <option key={i} value={option}>\n          {option}\n        </option>\n      ))}\n    </select>\n  )\n}\n","import React, { useCallback } from 'react'\nimport { useHistory } from 'react-router-dom'\nimport cn from 'classnames'\n\nimport { isStringEmptyOrNull, getPageNumberFromUriParam } from '../../utilities'\nimport { useQuery } from '../../hooks/useQuery'\n\nimport './pagination.scss'\n\ntype PaginationProps = {\n  currentPage: number\n  pageCount: number\n  pageSize: number\n  prevUri?: string\n  nextUri?: string\n  lastUri?: string\n}\nexport const Pagination = ({ pageCount, currentPage, pageSize, prevUri, nextUri, lastUri }: PaginationProps) => {\n  const history = useHistory()\n  const query = useQuery()\n\n  const handleGotoPageByNumber = useCallback(\n    (e: React.MouseEvent<HTMLButtonElement>, number: number) => {\n      e.preventDefault()\n      query.set('page', `${number}`)\n      history.push({ search: query.toString() })\n    },\n    [query, history]\n  )\n\n  const handleChangePageSize = useCallback(\n    (e: React.FormEvent<HTMLSelectElement>) => {\n      e.preventDefault()\n      query.set('pageSize', `${e.currentTarget.value}`)\n      history.push({ search: query.toString() })\n    },\n    [query, history]\n  )\n\n  return (\n    <div className=\"pagination\">\n      <button\n        className=\"pagination__button-prev\"\n        onClick={e => handleGotoPageByNumber(e, getPageNumberFromUriParam(prevUri))}\n        disabled={isStringEmptyOrNull(prevUri)}\n      >\n        Prev\n      </button>\n\n      {pageCount > 0 &&\n        Array.from(Array(pageCount).keys()).map(index => (\n          <button\n            key={`page-${index}`}\n            className={cn('pagination__button-page', { 'pagination__button-page--active': currentPage === index + 1 })}\n            onClick={e => handleGotoPageByNumber(e, index + 1)}\n            disabled={currentPage === index + 1}\n          >\n            {index + 1}\n          </button>\n        ))}\n\n      {!isStringEmptyOrNull(lastUri) && (\n        <button\n          className=\"pagination__button-last\"\n          onClick={e => handleGotoPageByNumber(e, getPageNumberFromUriParam(lastUri))}\n          disabled={currentPage === getPageNumberFromUriParam(lastUri)}\n        >\n          Last\n        </button>\n      )}\n\n      <button\n        className=\"pagination__button-next\"\n        onClick={e => handleGotoPageByNumber(e, getPageNumberFromUriParam(nextUri))}\n        disabled={isStringEmptyOrNull(nextUri)}\n      >\n        Next\n      </button>\n      <select onChange={e => e.currentTarget.blur()} onBlur={e => handleChangePageSize(e)} value={`${pageSize}`}>\n        <option value=\"5\">5</option>\n        <option value=\"10\">10</option>\n        <option value=\"20\">20</option>\n        <option value=\"30\">30</option>\n        <option value=\"50\">50</option>\n        <option value=\"100\">100</option>\n      </select>\n    </div>\n  )\n}\n","import React, { useState, useEffect, useMemo } from 'react'\nimport { useSelector, useDispatch } from 'react-redux'\nimport { Link } from 'react-router-dom'\nimport { format } from 'date-fns'\n\nimport {\n  getBookCoverImageUrl,\n  BookCoverSize,\n  isArrayEmptyOrNull,\n  getPageNumberFromUriParam,\n  getUriByRel,\n  getLastPathnameFromUrl,\n} from '../../utilities'\nimport { RootState, AppDispatch } from '../../store'\nimport { fetchGotBooks } from '../../store/actions/services.actions'\n\nimport { useQuery } from '../../hooks/useQuery'\nimport Page from '../../components/Page'\nimport DataTable from '../../components/DataTable'\nimport Pagination from '../../components/Pagination'\n\nexport const HomeContainer = () => {\n  const query = useQuery()\n  const { isLoading } = useSelector((state: RootState) => state.layouts)\n  const { books } = useSelector((state: RootState) => state.services)\n  const dispatch: AppDispatch = useDispatch()\n  const pageQuery = query.get('page')\n  const pageSizeQuery = query.get('pageSize')\n\n  // Local State\n  const [state, setState] = useState({\n    currentPage: 0,\n    pageSize: 0,\n    pageCount: 1,\n    nextUri: '',\n    prevUri: '',\n    lastUri: '',\n  })\n\n  // Deeplinking query param change effect\n  // NOTE: Use querystring param as the source of truth to change page number\n  useEffect(() => {\n    setState(state => ({\n      ...state,\n      currentPage: pageQuery !== null ? +pageQuery : 1,\n      pageSize: pageSizeQuery !== null ? +pageSizeQuery : 5,\n    }))\n  }, [pageQuery, pageSizeQuery])\n\n  // Fetch New Books Data when Page Index or Page Size Changes\n  useEffect(() => {\n    if (state.currentPage && state.pageSize) {\n      const booksPromise = dispatch(fetchGotBooks({ page: state.currentPage, pageSize: state.pageSize }))\n      return () => {\n        booksPromise.abort()\n      }\n    }\n  }, [state.currentPage, state.pageSize, dispatch])\n\n  // Update pagination state when Respnse Header Link state is updated\n  useEffect(() => {\n    if (!isArrayEmptyOrNull(books.links)) {\n      const nextUri = getUriByRel(books.links, 'next')\n      const prevUri = getUriByRel(books.links, 'prev')\n      const lastUri = getUriByRel(books.links, 'last')\n      const pageCount = getPageNumberFromUriParam(lastUri)\n\n      setState(state => ({ ...state, nextUri, prevUri, lastUri, pageCount }))\n    }\n  }, [books.links])\n\n  // Table Columns Config\n  const columns = useMemo(\n    () => [\n      {\n        Header: '',\n        accessor: 'isbn',\n        Cell: (props: any) => {\n          const {\n            row: { original },\n          } = props\n          // Render Image\n          return (\n            <Link to={`/book/${getLastPathnameFromUrl(original.url)}`}>\n              <img\n                className=\"thumbnail\"\n                src={getBookCoverImageUrl(original.isbn, BookCoverSize.Medium)}\n                alt={original.name}\n              />\n            </Link>\n          )\n        },\n      },\n      {\n        Header: 'Title',\n        accessor: 'name',\n        Cell: (props: any) => {\n          const {\n            row: { original },\n          } = props\n          return (\n            <Link className=\"link\" to={`/book/${getLastPathnameFromUrl(original.url)}`}>\n              {original.name}\n            </Link>\n          )\n        },\n      },\n      {\n        Header: 'Authors',\n        accessor: 'authors',\n      },\n      {\n        Header: 'Release Date',\n        accessor: 'released',\n        Cell: (props: any) => format(new Date(props.value), 'MM/dd/yyyy'),\n      },\n      {\n        Header: 'Publisher',\n        accessor: 'publisher',\n      },\n      {\n        Header: 'Country',\n        accessor: 'country',\n      },\n      {\n        Header: 'Format',\n        accessor: 'mediaType',\n      },\n      {\n        Header: 'Page',\n        accessor: 'numberOfPages',\n        Cell: (props: any) => {\n          const { value } = props\n          // Render Image\n          return <span>{value} pages</span>\n        },\n      },\n    ],\n    []\n  )\n\n  return React.useMemo(\n    () => (\n      <Page title=\"GOT | Books\" className=\"books\" isLoading={isLoading}>\n        <DataTable\n          columns={columns}\n          data={books.results}\n          initialState={{\n            sortBy: [\n              {\n                id: 'name',\n                desc: false,\n              },\n            ],\n          }}\n        />\n\n        <Pagination\n          pageCount={state.pageCount}\n          currentPage={state.currentPage}\n          pageSize={state.pageSize}\n          prevUri={state.prevUri}\n          nextUri={state.nextUri}\n          lastUri={state.lastUri}\n        />\n      </Page>\n    ),\n    [books, columns, isLoading, state]\n  )\n}\n","import { createSlice } from '@reduxjs/toolkit'\n\nimport { IBook, IHouse, ICharacter } from '../../models'\nimport {\n  fetchGotBooks,\n  fetchGotBookById,\n  fetchGotBooksByUri,\n  fetchGotHouses,\n  fetchGotHouseById,\n  fetchGotCharacters,\n  fetchGotCharacterById,\n} from '../actions/services.actions'\n\nexport const servicesSlice = createSlice({\n  name: 'services',\n  initialState: {\n    books: {\n      results: [] as IBook[],\n      links: [],\n    },\n    houses: {\n      results: [] as IHouse[],\n      links: [],\n    },\n    characters: {\n      results: [] as ICharacter[],\n      links: [],\n    },\n    book: {} as IBook,\n    house: {} as IHouse,\n    character: {} as ICharacter,\n  },\n  reducers: {\n    resetBookState: state => {\n      state.book = {} as IBook\n    },\n    resetHouseState: state => {\n      state.house = {} as IHouse\n    },\n    resetCharacterState: state => {\n      state.character = {} as ICharacter\n    },\n  },\n  // Thunks\n  extraReducers: {\n    [`${fetchGotBooks.fulfilled}`]: (state, { payload }) => {\n      state.books.results = payload.results\n      state.books.links = payload.links\n    },\n    [`${fetchGotBookById.fulfilled}`]: (state, { payload }) => {\n      state.book = payload\n    },\n    [`${fetchGotBooksByUri.fulfilled}`]: (state, { payload }) => {\n      state.books.results = payload.results\n      state.books.links = payload.links\n    },\n    [`${fetchGotHouses.fulfilled}`]: (state, { payload }) => {\n      state.houses.results = payload.results\n      state.houses.links = payload.links\n    },\n    [`${fetchGotHouseById.fulfilled}`]: (state, { payload }) => {\n      state.house = payload\n    },\n    [`${fetchGotCharacters.fulfilled}`]: (state, { payload }) => {\n      state.characters.results = payload.results\n      state.characters.links = payload.links\n    },\n    [`${fetchGotCharacterById.fulfilled}`]: (state, { payload }) => {\n      state.character = payload\n    },\n  },\n})\n\nexport default servicesSlice.reducer\n","import React, { useEffect, useState } from 'react'\nimport { Link } from 'react-router-dom'\nimport axios from 'axios'\n\nimport { gotApi } from '../../services/gotApi.service'\nimport { getStringValueOrNa } from '../../utilities'\n\nimport './link-crawl.scss'\n\ntype LinkCrawlProps = {\n  uri: string\n  href: string\n  labelByProp: string\n}\nexport const LinkCrawl = ({ uri, href, labelByProp }: LinkCrawlProps) => {\n  const [label, setLabel] = useState(null)\n\n  useEffect(() => {\n    const source = axios.CancelToken.source()\n    gotApi\n      .getDataByUri(uri, { cancelToken: source.token })\n      .then(({ data }) => {\n        setLabel(data[labelByProp] ?? '')\n      })\n      .catch(err => {\n        // Catch Error\n      })\n    return () => source.cancel()\n  }, [uri, labelByProp])\n\n  return React.useMemo(\n    () => (\n      <span className=\"link-crawl\">\n        <Link className=\"link\" to={href}>\n          {getStringValueOrNa(label)}\n        </Link>\n      </span>\n    ),\n    [href, label]\n  )\n}\n","import { isArrayEmptyOrNull, getLastPathnameFromUrl, isStringEmptyOrNull } from '../utilities'\n\nimport { LinkCrawl } from '../modules/LinksList'\n\nexport const linkCrawlHelper = (uri: string, baseHref: string, labelByProp: string) => {\n  return (\n    !isStringEmptyOrNull(uri) && (\n      <LinkCrawl uri={uri} href={`/${baseHref}/${getLastPathnameFromUrl(uri)}`} labelByProp={labelByProp} />\n    )\n  )\n}\n\nexport const linksCrawlHelper = (array: string[], baseHref: string, labelByProp: string) => {\n  const uriArray = array\n  return !isArrayEmptyOrNull(uriArray)\n    ? uriArray.map((uri: string, index: number) => (\n        <LinkCrawl\n          key={`${uri}`}\n          uri={uri}\n          href={`/${baseHref}/${getLastPathnameFromUrl(uri)}`}\n          labelByProp={labelByProp}\n        />\n      ))\n    : ''\n}\n","import React, { useEffect } from 'react'\nimport { useParams } from 'react-router-dom'\nimport { useSelector, useDispatch } from 'react-redux'\nimport { Breadcrumbs, IconButton, Paper } from '@material-ui/core'\nimport { IoMdArrowRoundBack } from 'react-icons/io'\nimport { format } from 'date-fns'\n\nimport { IBook } from '../../models'\nimport { RootState, AppDispatch } from '../../store'\nimport { servicesSlice } from '../../store/reducers/services.reducer'\nimport {\n  BookCoverSize,\n  getBookCoverImageUrl,\n  historyGoBack,\n  isArrayEmptyOrNull,\n  isStringEmptyOrNull,\n  getStringValueOrNa,\n} from '../../utilities'\nimport { linksCrawlHelper } from '../../helpers/LinkCrawlHelper'\nimport { fetchGotBookById } from '../../store/actions/services.actions'\n\nimport Page from '../../components/Page'\n\nimport './book-details.scss'\n\ntype ParamTypes = {\n  id: string\n}\n\nexport const BookDetailsContainer = () => {\n  const { id } = useParams<ParamTypes>()\n  const { isLoading } = useSelector((state: RootState) => state.layouts)\n  const { book }: { book: IBook } = useSelector((state: RootState) => state.services)\n  const dispatch: AppDispatch = useDispatch()\n  const { resetBookState } = servicesSlice.actions\n\n  // Fetch character details\n  useEffect(() => {\n    if (id) {\n      const promise = dispatch(fetchGotBookById(id))\n      return () => {\n        promise.abort()\n        dispatch(resetBookState())\n      }\n    }\n  }, [id, dispatch, resetBookState])\n\n  return React.useMemo(\n    () => (\n      <Page title={`GOT | Book: ${getStringValueOrNa(book.name)}`} className=\"book-details\" isLoading={isLoading}>\n        <Breadcrumbs>\n          <IconButton onClick={e => historyGoBack()}>\n            <IoMdArrowRoundBack />\n          </IconButton>\n          <h3>{getStringValueOrNa(book.name)}</h3>\n        </Breadcrumbs>\n        <Paper elevation={2}>\n          <div className=\"inset-padding\">\n            <div className=\"paper-container\">\n              <h2>{getStringValueOrNa(book.name)}</h2>\n            </div>\n            <div className=\"paper-container\">\n              <div className=\"book-cover\">\n                <img src={getBookCoverImageUrl(book.isbn, BookCoverSize.Medium)} alt={getStringValueOrNa(book.name)} />\n              </div>\n              <div className=\"book-info\">\n                <h3>Book Details</h3>\n                <p>\n                  <b>ISBN:</b> {getStringValueOrNa(book.isbn)}\n                </p>\n                <p>\n                  <b>{book.mediaType}:</b> {getStringValueOrNa(book.numberOfPages)}\n                </p>\n                <p>\n                  <b>Authors:</b> {book?.authors && book?.authors.join(', ')}\n                </p>\n                <p>\n                  <b>Publisher:</b> {getStringValueOrNa(book.publisher)}\n                </p>\n                <p>\n                  <b>Country:</b> {getStringValueOrNa(book.country)}\n                </p>\n\n                <p>\n                  <b>Released:</b>\n                  {!isStringEmptyOrNull(book.released) ? format(new Date(book.released), 'MMMM dd, yyyy') : 'N/A'}\n                </p>\n              </div>\n              <div className=\"characters\">\n                <h3>Characters</h3>\n                <div className=\"list\">\n                  {!isArrayEmptyOrNull(book.characters)\n                    ? linksCrawlHelper(book.characters, 'character', 'name')\n                    : 'N/A'}\n                </div>\n              </div>\n              <div className=\"characters\">\n                <h3>POV Characters</h3>\n                <div className=\"list\">\n                  {!isArrayEmptyOrNull(book.povCharacters)\n                    ? linksCrawlHelper(book.povCharacters, 'character', 'name')\n                    : 'N/A'}\n                </div>\n              </div>\n            </div>\n          </div>\n        </Paper>\n      </Page>\n    ),\n    [book, isLoading]\n  )\n}\n","import React, { useState, useEffect, useMemo } from 'react'\nimport { useSelector, useDispatch } from 'react-redux'\nimport { Link } from 'react-router-dom'\n\nimport { isArrayEmptyOrNull, getPageNumberFromUriParam, getUriByRel, getLastPathnameFromUrl } from '../../utilities'\nimport { RootState, AppDispatch } from '../../store'\nimport { fetchGotHouses } from '../../store/actions/services.actions'\nimport { linkCrawlHelper, linksCrawlHelper } from '../../helpers/LinkCrawlHelper'\n\nimport { useQuery } from '../../hooks/useQuery'\nimport Page from '../../components/Page'\nimport DataTable from '../../components/DataTable'\nimport Pagination from '../../components/Pagination'\n\nexport const HousesContainer = () => {\n  const query = useQuery()\n  const { isLoading } = useSelector((state: RootState) => state.layouts)\n  const { houses } = useSelector((state: RootState) => state.services)\n  const dispatch: AppDispatch = useDispatch()\n  const pageQuery = query.get('page')\n  const pageSizeQuery = query.get('pageSize')\n\n  const [state, setState] = useState({\n    currentPage: 0,\n    pageSize: 0,\n    pageCount: 1,\n    nextUri: '',\n    prevUri: '',\n    lastUri: '',\n  })\n\n  // Deeplinking query param change effect\n  // NOTE: Use querystring param as the source of truth to change page number\n  useEffect(() => {\n    setState(state => ({\n      ...state,\n      currentPage: pageQuery !== null ? +pageQuery : 1,\n      pageSize: pageSizeQuery !== null ? +pageSizeQuery : 20,\n    }))\n  }, [pageQuery, pageSizeQuery])\n\n  // Fetch New Books Data when Page Index or Page Size Changes\n  useEffect(() => {\n    if (state.currentPage && state.pageSize) {\n      const housesPromise = dispatch(fetchGotHouses({ page: state.currentPage, pageSize: state.pageSize }))\n      return () => {\n        housesPromise.abort()\n      }\n    }\n  }, [state.currentPage, state.pageSize, dispatch])\n\n  // Update pagination state when Respnse Header Link state is updated\n  useEffect(() => {\n    if (!isArrayEmptyOrNull(houses.links)) {\n      const nextUri = getUriByRel(houses.links, 'next')\n      const prevUri = getUriByRel(houses.links, 'prev')\n      const lastUri = getUriByRel(houses.links, 'last')\n      const pageCount = getPageNumberFromUriParam(lastUri)\n\n      setState(state => ({ ...state, nextUri, prevUri, lastUri, pageCount }))\n    }\n  }, [houses.links])\n\n  // Table Columns Config\n  const columns = useMemo(\n    () => [\n      {\n        Header: 'Name',\n        accessor: 'name',\n        Cell: (props: any) => {\n          const {\n            row: { original },\n          } = props\n          const houseId = getLastPathnameFromUrl(original.url)\n          return (\n            <Link className=\"link\" to={`/house/${houseId}`}>\n              {original.name}\n            </Link>\n          )\n        },\n      },\n      {\n        Header: 'Region',\n        accessor: 'region',\n      },\n      {\n        Header: 'Overlord',\n        accessor: 'overlord',\n        Cell: (props: any) => linkCrawlHelper(props.value, 'house', 'name'),\n      },\n      {\n        Header: 'Current Lord',\n        accessor: 'currentLord',\n        Cell: (props: any) => linkCrawlHelper(props.value, 'character', 'name'),\n      },\n      {\n        Header: 'Details',\n        accessor: 'titles', // Array\n        maxWidth: 250,\n        Cell: (props: any) => {\n          const {\n            row: { original },\n          } = props\n          return (\n            <div className=\"details-column-content\">\n              <div className=\"founded\">\n                <h4>Founded</h4>\n                {original.founded ? original.founded : 'N/A'}\n              </div>\n              <div className=\"founder\">\n                <h4>Founder</h4>\n                {original.founder ? linkCrawlHelper(original.founder, 'character', 'name') : 'N/A'}\n              </div>\n              <div className=\"founder\">\n                <h4>Heir</h4>\n                {original.heir ? linkCrawlHelper(original.heir, 'character', 'name') : 'N/A'}\n              </div>\n              <div className=\"titles\">\n                <h4>Titles</h4>\n                {!isArrayEmptyOrNull(original.titles)\n                  ? original.titles.map((title: string) => <p key={title}>{title}</p>)\n                  : 'N/A'}\n              </div>\n              <div className=\"coat-of-arms\">\n                <h4>Coat of Arms</h4>\n                {original.coatOfArms}\n              </div>\n              <div className=\"words\">\n                <h4>Words</h4>\n                {original.words}\n              </div>\n              <div className=\"sworn-members\">\n                <h4>Sworn Members</h4>\n                {original.swornMembers ? linksCrawlHelper(original.swornMembers, 'character', 'name') : 'N/A'}\n              </div>\n            </div>\n          )\n        },\n      },\n    ],\n    []\n  )\n\n  return React.useMemo(\n    () => (\n      <Page title=\"GOT | Houses\" className=\"houses\" isLoading={isLoading}>\n        <DataTable\n          columns={columns}\n          data={houses.results}\n          initialState={{\n            sortBy: [\n              {\n                id: 'name',\n                desc: false,\n              },\n            ],\n          }}\n        />\n        <Pagination\n          pageCount={state.pageCount}\n          currentPage={state.currentPage}\n          pageSize={state.pageSize}\n          prevUri={state.prevUri}\n          nextUri={state.nextUri}\n          lastUri={state.lastUri}\n        />\n      </Page>\n    ),\n    [houses, columns, isLoading, state]\n  )\n}\n","import React, { useEffect } from 'react'\nimport { useParams } from 'react-router-dom'\nimport { useSelector, useDispatch } from 'react-redux'\nimport { Breadcrumbs, IconButton, Paper } from '@material-ui/core'\nimport { IoMdArrowRoundBack } from 'react-icons/io'\n\nimport { IHouse } from '../../models'\nimport { RootState, AppDispatch } from '../../store'\nimport { servicesSlice } from '../../store/reducers/services.reducer'\nimport { historyGoBack, isArrayEmptyOrNull, isStringEmptyOrNull, getStringValueOrNa } from '../../utilities'\nimport { linkCrawlHelper, linksCrawlHelper } from '../../helpers/LinkCrawlHelper'\nimport { fetchGotHouseById } from '../../store/actions/services.actions'\n\nimport Page from '../../components/Page'\n\nimport './house-details.scss'\n\nexport const HouseDetailsContainer = () => {\n  const { id } = useParams<{ id: string }>()\n  const { isLoading } = useSelector((state: RootState) => state.layouts)\n  const { house }: { house: IHouse } = useSelector((state: RootState) => state.services)\n  const dispatch: AppDispatch = useDispatch()\n  const { resetHouseState } = servicesSlice.actions\n\n  // Fetch character details\n  useEffect(() => {\n    if (id) {\n      const promise = dispatch(fetchGotHouseById(id))\n      return () => {\n        dispatch(resetHouseState())\n        promise.abort()\n      }\n    }\n  }, [id, dispatch, resetHouseState])\n\n  return React.useMemo(\n    () => (\n      <Page title={`GOT | House: ${house?.name}`} className=\"house-details\" isLoading={isLoading}>\n        <Breadcrumbs>\n          <IconButton onClick={e => historyGoBack()}>\n            <IoMdArrowRoundBack />\n          </IconButton>\n          <h3>{house.name ? house.name : 'N/A'}</h3>\n        </Breadcrumbs>\n        <Paper elevation={2}>\n          <div className=\"inset-padding\">\n            <div className=\"paper-container\">\n              <h2>{house.name ? house.name : 'N/A'}</h2>\n            </div>\n            <div className=\"paper-container\">\n              <div className=\"house-info\">\n                <h3>House Details</h3>\n                <p>\n                  <b>Overlord:</b> {linkCrawlHelper(house.overlord, 'house', 'name')}\n                </p>\n                <p>\n                  <b>Founded:</b> {getStringValueOrNa(house.founded)}\n                </p>\n                <p>\n                  <b>Founder:</b> {linkCrawlHelper(house.founder, 'character', 'name')}\n                </p>\n                <p>\n                  <b>Dead:</b> {getStringValueOrNa(house.diedOut)}\n                </p>\n                <p>\n                  <b>Region:</b> {getStringValueOrNa(house.region)}\n                </p>\n                <p>\n                  <b>Cost of Arms:</b> {getStringValueOrNa(house.coatOfArms)}\n                </p>\n                <p>\n                  <b>Words:</b> {getStringValueOrNa(house.words)}\n                </p>\n                <p>\n                  <b>Ancestral Weapons:</b> {getStringValueOrNa(house?.ancestralWeapons?.join(', '))}\n                </p>\n                <p>\n                  <b>Titles:</b> {getStringValueOrNa(house?.titles?.join(', '))}\n                </p>\n                <p>\n                  <b>Seats:</b> {getStringValueOrNa(house?.seats?.join(', '))}\n                </p>\n\n                <p>\n                  <b>Current Lord:</b> {linkCrawlHelper(house.currentLord, 'character', 'name')}\n                </p>\n                <p>\n                  <b>Heir:</b>{' '}\n                  {!isStringEmptyOrNull(house.heir) ? linkCrawlHelper(house.heir, 'character', 'name') : 'N/A'}\n                </p>\n              </div>\n              <div className=\"characters\">\n                <h3>Cadet Branches</h3>\n                <div className=\"list\">\n                  {!isArrayEmptyOrNull(house.cadetBranches)\n                    ? linksCrawlHelper(house.cadetBranches, 'house', 'name')\n                    : 'N/A'}\n                </div>\n              </div>\n              <div className=\"characters\">\n                <h3>Sworn Members</h3>\n                <div className=\"list\">\n                  {!isArrayEmptyOrNull(house.swornMembers)\n                    ? linksCrawlHelper(house.swornMembers, 'character', 'name')\n                    : 'N/A'}\n                </div>\n              </div>\n            </div>\n          </div>\n        </Paper>\n      </Page>\n    ),\n    [house, isLoading]\n  )\n}\n","import React, { useState, useEffect, useMemo } from 'react'\nimport { useSelector, useDispatch } from 'react-redux'\nimport { Link } from 'react-router-dom'\n\nimport {\n  isArrayEmptyOrNull,\n  getPageNumberFromUriParam,\n  getUriByRel,\n  getLastPathnameFromUrl,\n  isStringEmptyOrNull,\n} from '../../utilities'\nimport { RootState, AppDispatch } from '../../store'\nimport { fetchGotCharacters } from '../../store/actions/services.actions'\nimport { linkCrawlHelper, linksCrawlHelper } from '../../helpers/LinkCrawlHelper'\n\nimport { useQuery } from '../../hooks/useQuery'\nimport Page from '../../components/Page'\nimport DataTable, { SelectColumnFilter } from '../../components/DataTable'\nimport Pagination from '../../components/Pagination'\n\nexport const CharactersContainer = () => {\n  const query = useQuery()\n  const { isLoading } = useSelector((state: RootState) => state.layouts)\n  const { characters } = useSelector((state: RootState) => state.services)\n  const dispatch: AppDispatch = useDispatch()\n  const pageQuery = query.get('page')\n  const pageSizeQuery = query.get('pageSize')\n\n  const [state, setState] = useState({\n    currentPage: 0,\n    pageSize: 0,\n    pageCount: 1,\n    nextUri: '',\n    prevUri: '',\n    lastUri: '',\n  })\n\n  // Deeplinking query param change effect\n  // NOTE: Use querystring param as the source of truth to change page number\n  useEffect(() => {\n    setState(state => ({\n      ...state,\n      currentPage: pageQuery !== null ? +pageQuery : 1,\n      pageSize: pageSizeQuery !== null ? +pageSizeQuery : 30,\n    }))\n  }, [pageQuery, pageSizeQuery])\n\n  // Fetch New Books Data when Page Index or Page Size Changes\n  useEffect(() => {\n    if (state.currentPage && state.pageSize) {\n      const housesPromise = dispatch(fetchGotCharacters({ page: state.currentPage, pageSize: state.pageSize }))\n      return () => {\n        housesPromise.abort()\n      }\n    }\n  }, [state.currentPage, state.pageSize, dispatch])\n\n  // Update pagination state when Respnse Header Link state is updated\n  useEffect(() => {\n    if (!isArrayEmptyOrNull(characters.links)) {\n      const nextUri = getUriByRel(characters.links, 'next')\n      const prevUri = getUriByRel(characters.links, 'prev')\n      const lastUri = getUriByRel(characters.links, 'last')\n      const pageCount = getPageNumberFromUriParam(lastUri)\n\n      setState(state => ({ ...state, nextUri, prevUri, lastUri, pageCount }))\n    }\n  }, [characters.links])\n\n  // Table Columns Config\n  const columns = useMemo(\n    () => [\n      {\n        Header: 'Name',\n        accessor: 'name',\n        Cell: (props: any) => {\n          const {\n            row: { original },\n          } = props\n          const characterId = getLastPathnameFromUrl(original.url)\n          return (\n            <>\n              <Link to={`/character/${characterId}`}>{isStringEmptyOrNull(original.name) ? 'N/A' : original.name}</Link>\n              {!isArrayEmptyOrNull(original.aliases) && (\n                <div className=\"aliases\">\n                  <h5>Aliases:</h5>\n                  {original.aliases.map((alias: string) => (\n                    <p key={alias}>{alias}</p>\n                  ))}\n                </div>\n              )}\n            </>\n          )\n        },\n      },\n      {\n        Header: 'Gender',\n        accessor: 'gender',\n        Filter: SelectColumnFilter,\n        disableSortBy: true,\n        filter: 'includes',\n      },\n      {\n        Header: 'Culture',\n        accessor: 'culture',\n        Filter: SelectColumnFilter,\n        disableSortBy: true,\n        filter: 'includes',\n      },\n      {\n        Header: 'Family',\n        accessor: 'father',\n        Cell: (props: any) => {\n          const {\n            row: { original },\n          } = props\n          return (\n            <div>\n              {!isStringEmptyOrNull(original.father) && (\n                <span>Father {linkCrawlHelper(original.father, 'character', 'name')}</span>\n              )}\n              {!isStringEmptyOrNull(original.mother) && (\n                <span>Mother {linkCrawlHelper(original.mother, 'character', 'name')}</span>\n              )}\n              {!isStringEmptyOrNull(original.spouse) && (\n                <span>Spouse {linkCrawlHelper(original.spouse, 'character', 'name')}</span>\n              )}\n            </div>\n          )\n        },\n      },\n      {\n        Header: 'Allegiances',\n        accessor: 'allegiances', // Array\n        Cell: (props: any) => linksCrawlHelper(props.value, 'house', 'name'),\n      },\n      {\n        Header: 'Books',\n        accessor: 'books', // Array\n        Cell: (props: any) => linksCrawlHelper(props.value, 'book', 'name'),\n        Filter: SelectBookFilter,\n        filter: 'includes',\n        disableSortBy: true,\n      },\n      {\n        Header: 'POV Books',\n        accessor: 'povBooks', // Array\n        Cell: (props: any) => linksCrawlHelper(props.value, 'book', 'name'),\n      },\n      // {\n      //   Header: 'TV Series',\n      //   accessor: 'tvSeries', // Array\n      // },\n      // {\n      //   Header: 'Played By',\n      //   accessor: 'playedBy', // Array\n      // },\n    ],\n    []\n  )\n\n  return useMemo(\n    () => (\n      <Page title=\"GOT | Characters\" className=\"characters\" isLoading={isLoading}>\n        <DataTable columns={columns} data={characters.results} />\n        <Pagination\n          pageCount={state.pageCount}\n          currentPage={state.currentPage}\n          pageSize={state.pageSize}\n          prevUri={state.prevUri}\n          nextUri={state.nextUri}\n          lastUri={state.lastUri}\n        />\n      </Page>\n    ),\n    [characters, columns, state, isLoading]\n  )\n}\n\nexport const SelectBookFilter = ({ column: { filterValue, setFilter, preFilteredRows, id } }: any) => {\n  const options = React.useMemo(() => {\n    const options: any = new Set()\n    preFilteredRows.forEach((row: any) => {\n      !isArrayEmptyOrNull(row.values[id]) &&\n        row.values[id].forEach((bookUri: string) => {\n          options.add(bookUri)\n        })\n    })\n    return [...options]\n  }, [id, preFilteredRows])\n\n  return (\n    <select\n      value={filterValue}\n      onChange={e => e.currentTarget.blur()}\n      onBlur={e => {\n        setFilter(e.target.value || undefined)\n      }}\n    >\n      <option value=\"\">All</option>\n      {options.map((option, i) => (\n        <option key={i} value={option}>\n          {`Book ${getLastPathnameFromUrl(option)}`}\n        </option>\n      ))}\n    </select>\n  )\n}\n","import React, { useEffect } from 'react'\nimport { useParams } from 'react-router-dom'\nimport { useSelector, useDispatch } from 'react-redux'\n\nimport { ICharacter } from '../../models'\nimport { RootState, AppDispatch } from '../../store'\nimport { servicesSlice } from '../../store/reducers/services.reducer'\nimport { historyGoBack } from '../../utilities'\nimport { fetchGotCharacterById } from '../../store/actions/services.actions'\n\nimport Page from '../../components/Page'\n\nexport const CharacterDetailsContainer = () => {\n  const { id } = useParams<{ id: string }>()\n  const { isLoading } = useSelector((state: RootState) => state.layouts)\n  const { character }: { character: ICharacter } = useSelector((state: RootState) => state.services)\n  const dispatch: AppDispatch = useDispatch()\n  const { resetCharacterState } = servicesSlice.actions\n\n  // Fetch character details\n  useEffect(() => {\n    if (id) {\n      const promise = dispatch(fetchGotCharacterById(id))\n      return () => {\n        dispatch(resetCharacterState())\n        promise.abort()\n      }\n    }\n  }, [id, dispatch, resetCharacterState])\n\n  return React.useMemo(\n    () => (\n      <Page\n        title={`GOT | Character: ${character.name ? character.name : 'N/A'}`}\n        className=\"character-details\"\n        isLoading={isLoading}\n      >\n        <button onClick={e => historyGoBack()}>Back</button>\n        <pre>\n          <code>{JSON.stringify(character, null, '  ')}</code>\n        </pre>\n      </Page>\n    ),\n    [character, isLoading]\n  )\n}\n","import React from 'react'\nimport { Switch, Route } from 'react-router-dom'\n\nimport { HomeContainer } from './containers/HomeContainer'\nimport { BookDetailsContainer } from './containers/BookDetailsContainer'\nimport { HousesContainer } from './containers/HousesContainer'\nimport { HouseDetailsContainer } from './containers/HouseDetailsContainer'\nimport { CharactersContainer } from './containers/CharactersContainer'\nimport { CharacterDetailsContainer } from './containers/CharacterDetailsContainer'\n\nconst Routes = () => {\n  return (\n    <Switch>\n      <Route exact path=\"/\" component={HomeContainer} />\n      <Route path=\"/book/:id\" component={BookDetailsContainer} />\n      <Route path=\"/houses\" component={HousesContainer} />\n      <Route path=\"/house/:id\" component={HouseDetailsContainer} />\n      <Route path=\"/characters\" component={CharactersContainer} />\n      <Route path=\"/character/:id\" component={CharacterDetailsContainer} />\n    </Switch>\n  )\n}\n\nexport default Routes\n","import React, { useRef, useState, useEffect } from 'react'\nimport { HashRouter as Router } from 'react-router-dom'\nimport Headroom from 'headroom.js'\nimport cn from 'classnames'\n\nimport { PrimaryHeader } from './modules'\nimport Routes from './Routes'\n\nconst App = () => {\n  const headerGroupRef = useRef(null)\n  const [headerPinned, setHeaderPinned] = useState(false)\n\n  const handlePinHeader = () => {\n    setHeaderPinned(true)\n  }\n\n  const handleUnPinHeader = () => {\n    setHeaderPinned(false)\n  }\n\n  // Start Headroom (Sticky Header)\n  useEffect(() => {\n    const { current }: { current: string | null } = headerGroupRef\n    if (current !== null) {\n      const headroom = new Headroom(current, {\n        tolerance: {\n          up: 5,\n          down: 5,\n        },\n        onPin: handlePinHeader,\n        onUnpin: handleUnPinHeader,\n      })\n      headroom.init()\n\n      return () => {\n        headroom.destroy()\n      }\n    }\n  }, [])\n\n  return (\n    <div\n      className={cn('main-container', {\n        'main-container--header-pinned': headerPinned,\n        'main-container--header-unpinned': !headerPinned,\n      })}\n    >\n      <Router>\n        <PrimaryHeader ref={headerGroupRef} />\n        <main>\n          <Routes />\n        </main>\n        <footer className=\"footer\">\n          <div className=\"footer__container\">\n            <p className=\"footer__copyright\">License Copyright: Unknown. </p>\n          </div>\n        </footer>\n      </Router>\n    </div>\n  )\n}\n\nexport default App\n","import { ReportHandler } from 'web-vitals'\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry)\n      getFID(onPerfEntry)\n      getFCP(onPerfEntry)\n      getLCP(onPerfEntry)\n      getTTFB(onPerfEntry)\n    })\n  }\n}\n\nexport default reportWebVitals\n","import { createSlice } from '@reduxjs/toolkit'\n\nimport {\n  fetchGotBooks,\n  fetchGotBookById,\n  fetchGotBooksByUri,\n  fetchGotHouses,\n  fetchGotHouseById,\n  fetchGotCharacters,\n  fetchGotCharacterById,\n} from '../actions/services.actions'\n\ntype State = {\n  breakpoint: string | null\n  isLoading: boolean\n}\n\nconst setLoadingReducer = (state: State, isLoading: boolean) => {\n  state.isLoading = isLoading\n}\n\nexport const layoutsSlice = createSlice({\n  name: 'layouts',\n  initialState: {\n    breakpoint: null,\n    isLoading: false,\n  },\n  reducers: {\n    breakpointChange: (state, action) => {\n      state.breakpoint = action.payload\n    },\n  },\n  // Thunks\n  extraReducers: {\n    [`${fetchGotBooks.pending}`]: state => setLoadingReducer(state, true),\n    [`${fetchGotBookById.pending}`]: state => setLoadingReducer(state, true),\n    [`${fetchGotBooksByUri.pending}`]: state => setLoadingReducer(state, true),\n    [`${fetchGotHouses.pending}`]: state => setLoadingReducer(state, true),\n    [`${fetchGotHouseById.pending}`]: state => setLoadingReducer(state, true),\n    [`${fetchGotCharacters.pending}`]: state => setLoadingReducer(state, true),\n    [`${fetchGotCharacterById.pending}`]: state => setLoadingReducer(state, true),\n\n    [`${fetchGotBooks.fulfilled}`]: state => setLoadingReducer(state, false),\n    [`${fetchGotBookById.fulfilled}`]: state => setLoadingReducer(state, false),\n    [`${fetchGotBooksByUri.fulfilled}`]: state => setLoadingReducer(state, false),\n    [`${fetchGotHouses.fulfilled}`]: state => setLoadingReducer(state, false),\n    [`${fetchGotHouseById.fulfilled}`]: state => setLoadingReducer(state, false),\n    [`${fetchGotCharacters.fulfilled}`]: state => setLoadingReducer(state, false),\n    [`${fetchGotCharacterById.fulfilled}`]: state => setLoadingReducer(state, false),\n\n    [`${fetchGotBooks.rejected}`]: state => setLoadingReducer(state, false),\n    [`${fetchGotBookById.rejected}`]: state => setLoadingReducer(state, false),\n    [`${fetchGotBooksByUri.rejected}`]: state => setLoadingReducer(state, false),\n    [`${fetchGotHouses.rejected}`]: state => setLoadingReducer(state, false),\n    [`${fetchGotHouseById.rejected}`]: state => setLoadingReducer(state, false),\n    [`${fetchGotCharacters.rejected}`]: state => setLoadingReducer(state, false),\n    [`${fetchGotCharacterById.rejected}`]: state => setLoadingReducer(state, false),\n  },\n})\n\nexport default layoutsSlice.reducer\n","import { configureStore, Action } from '@reduxjs/toolkit'\nimport { combineReducers } from 'redux'\nimport { ThunkAction } from 'redux-thunk'\n\nimport layouts from './reducers/layouts.reducer'\nimport services from './reducers/services.reducer'\n\nconst rootReducer = combineReducers({\n  layouts,\n  services,\n})\n\nconst store = configureStore({\n  reducer: rootReducer,\n})\n\nexport type RootState = ReturnType<typeof rootReducer>\nexport type AppDispatch = typeof store.dispatch\nexport type AppThunk = ThunkAction<void, RootState, null, Action<string>>\n\nexport default store\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport { Provider } from 'react-redux'\nimport { HelmetProvider } from 'react-helmet-async'\nimport { createMuiTheme, ThemeProvider } from '@material-ui/core'\n\nimport 'normalize.css'\nimport 'react-loader-spinner/dist/loader/css/react-spinner-loader.css'\nimport './index.scss'\nimport App from './App'\nimport reportWebVitals from './reportWebVitals'\n\nimport store from './store'\n\nconst theme = createMuiTheme({\n  typography: {\n    fontFamily: ['Poppins', 'sans-serif'].join(','),\n  },\n})\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <HelmetProvider>\n        <ThemeProvider theme={theme}>\n          <App />\n        </ThemeProvider>\n      </HelmetProvider>\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n)\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals()\n"],"sourceRoot":""}