{"version":3,"sources":["utilities/utilities.ts","modules/PrimaryHeader/PrimaryHeader.tsx","constants/global.constants.ts","services/gotApi.service.ts","store/actions/services.actions.ts","components/Loader/Loader.tsx","components/Page/Page.tsx","components/DataTable/DataTable.tsx","components/Pagination/Pagination.tsx","containers/HomeContainer/HomeContainer.tsx","containers/BookDetailsContainer/BookDetailsContainer.tsx","modules/LinksList/LinksList.tsx","helpers/LinkCrawl.tsx","containers/HousesContainer/HousesContainer.tsx","containers/HouseDetailsContainer/HouseDetailsContainer.tsx","containers/CharactersContainer/CharactersContainer.tsx","containers/CharacterDetailsContainer/CharacterDetailsContainer.tsx","Routes.tsx","App.tsx","reportWebVitals.ts","store/reducers/layouts.reducer.ts","store/reducers/services.reducer.ts","store/store.ts","index.tsx"],"names":["BookCoverSize","NavItem","href","children","useRoute","isActive","className","cn","PrimaryHeader","React","forwardRef","props","ref","ICE_FIRE_ENDPOINT_URL","process","OPEN_LIBRARY_COVER_URL","getBookCoverImageUrl","isbn","size","Small","isArrayEmptyOrNull","array","length","isStringEmptyOrNull","value","historyPushQueryParams","params","searchParams","URL","window","location","set","key","history","pushState","toString","historyGoBack","back","getPageNumberFromUriParam","uri","pageNumber","get","getUriByRel","links","rel","filter","link","getLastPathnameFromUrl","url","pathname","split","forageStore","localforage","createInstance","driver","INDEXEDDB","LOCALSTORAGE","name","http","axios","create","baseURL","adapter","setupCache","maxAge","store","gotApi","getBooks","a","getBookById","id","getHouses","getHouseById","getCharacters","getCharacterById","getDataByUri","fetchGotBooks","createAsyncThunk","response","data","LinkHeader","parse","headers","refs","results","fetchGotBookById","fetchGotBooksByUri","fetchGotHouses","fetchGotHouseById","fetchGotCharacters","fetchGotCharacterById","Loader","type","color","height","width","timeout","Page","title","isLoading","DataTable","columns","initialState","useTable","useFilters","useSortBy","getTableProps","getTableBodyProps","headerGroups","rows","prepareRow","map","headerGroup","getHeaderGroupProps","column","getHeaderProps","getSortByToggleProps","render","isSorted","isSortedDesc","canFilter","row","i","getRowProps","cells","cell","getCellProps","SelectColumnFilter","filterValue","setFilter","preFilteredRows","options","useMemo","Set","forEach","values","add","onChange","e","currentTarget","blur","onBlur","target","undefined","option","Pagination","pageCount","currentPage","pageSize","prevUri","nextUri","lastUri","handleGotoPageByNumber","useCallback","number","preventDefault","handleChangePageSize","page","onClick","disabled","Array","from","keys","index","HomeContainer","useSelector","state","layouts","books","services","dispatch","useDispatch","pageQuery","useSearchParam","pageSizeQuery","useState","setState","useEffect","booksPromise","abort","Header","accessor","Cell","original","src","Medium","alt","sortBy","desc","BookDetailsContainer","book","promise","JSON","stringify","LinkCrawl","labelByProp","label","setLabel","source","CancelToken","cancelToken","token","then","catch","err","cancel","linkCrawl","baseHref","linksCrawl","uriArray","HousesContainer","houses","housesPromise","houseId","founded","founder","titles","coatOfArms","words","swornMembers","HouseDetailsContainer","house","CharactersContainer","characters","characterId","aliases","alias","Filter","disableSortBy","father","mother","spouse","SelectBookFilter","bookUri","CharacterDetailsContainer","character","Routes","base","path","component","App","headerGroupRef","useRef","headerPinned","setHeaderPinned","handlePinHeader","handleUnPinHeader","current","headroom","Headroom","tolerance","up","down","onPin","onUnpin","init","destroy","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","setLoadingReducer","layoutsSlice","createSlice","breakpoint","reducers","breakpointChange","action","payload","extraReducers","pending","fulfilled","rejected","servicesSlice","rootReducer","combineReducers","configureStore","reducer","ReactDOM","StrictMode","document","getElementById"],"mappings":"uNAEYA,E,2HCSNC,G,MAAU,SAAC,GAAsC,IAApCC,EAAmC,EAAnCA,KAAMC,EAA6B,EAA7BA,SAA6B,EACjCC,YAASF,GAArBG,EAD6C,oBAEpD,OAAOA,EACL,sBAAMC,UAAWC,IAAG,4BAA6B,CAAE,oCAAqCF,IAAxF,SACGF,IAGH,cAAC,IAAD,CAAMD,KAAMA,EAAZ,SACE,mBAAGI,UAAWC,IAAG,4BAA6B,CAAE,oCAAqCF,IAAaH,KAAMA,EAAxG,SACGC,QAMIK,EAAgBC,IAAMC,YAA4B,SAACC,EAAOC,GAAR,OAC7D,wBAAQA,IAAKA,EAAKN,UAAU,0BAA5B,SACE,sBAAKA,UAAU,4BAAf,UACE,oBAAIA,UAAU,wBAAd,SACE,cAAC,IAAD,CAAMJ,KAAK,IAAX,mBAGF,sBAAKI,UAAU,sBAAf,UACE,cAAC,EAAD,CAASJ,KAAK,IAAd,mBACA,cAAC,EAAD,CAASA,KAAK,UAAd,oBACA,cAAC,EAAD,CAASA,KAAK,cAAd,mC,gBCpCKW,EAAwBC,wCACxBC,EAAyBD,wC,SFC1Bd,K,UAAAA,E,WAAAA,E,WAAAA,M,KAWL,I,IAAMgB,EAAuB,SAACC,GAAD,IAAeC,EAAf,uDAAsBlB,EAAcmB,MAApC,gBAC/BJ,EAD+B,YACLE,EADK,YACGC,EADH,SAcvBE,EAAqB,SAACC,GAAD,OAA4BA,GAAUA,GAA0B,IAAjBA,EAAMC,QAY1EC,EAAsB,SAACC,GAAD,OAAyD,OAAVA,GAAoC,KAAb,OAALA,QAAK,IAALA,OAAA,EAAAA,EAAOF,SAU9FG,EAAyB,SAACC,EAAkCF,GACvE,IACMG,EADM,IAAIC,IAAJ,UAAWC,OAAOC,WACLH,aAEzB,GADkB,kBAAXD,GAAuBF,GAASG,EAAaI,IAAIL,EAAQF,GAC1C,kBAAXE,EACT,IAAK,IAAMM,KAAON,EAChBC,EAAaI,IAAIC,EAAKN,EAAOM,IAGjCH,OAAOI,QAAQC,UAAU,KAAM,GAA/B,WAAuCP,EAAaQ,cAKzCC,EAAgB,WAC3BP,OAAOI,QAAQI,QAOJC,EAA4B,SAACC,GACxC,IAAMC,EAAa,IAAIZ,IAAJ,OAAQW,QAAR,IAAQA,IAAO,IAAIZ,aAAac,IAAI,QACvD,OAAOD,GAAcA,EAAa,GAQvBE,EAAc,SAACC,EAAcC,GAAyB,IAAD,EACjBD,EAAME,QAAO,SAACC,GAAD,OAAeA,EAAKF,MAAQA,KAAjFE,EADyD,oBAEhE,OAAOA,EAAOA,EAAKP,IAAM,IAQdQ,EAAyB,SAACC,GACrC,IA3D+B3B,EA2DzB4B,EAAW,IAAIrB,IAAIoB,GAAKC,SAC9B,OA5D+B5B,EA4DP4B,EAASC,MAAM,KA5DgB9B,EAAmBC,GAAmC,KAA1BA,EAAMA,EAAMC,OAAS,I,0FG1BpG6B,EAAcC,IAAYC,eAAe,CAC7CC,OAAQ,CAACF,IAAYG,UAAWH,IAAYI,cAC5CC,KAAM,cAGFC,EAAOC,IAAMC,OAAO,CACxBC,QAAShD,EACTiD,QAASC,qBAAW,CAAEC,ODZO,KCYkBC,MAAOd,IAAeW,UAG1DI,EAAS,CACpBC,SAAS,WAAD,4BAAE,WAAOzC,GAAP,SAAA0C,EAAA,+EACDV,EAAKjB,IAAL,UAAY5B,EAAZ,UAA2C,CAAEa,YAD5C,2CAAF,mDAAC,GAGT2C,YAAY,WAAD,4BAAE,WAAOC,GAAP,SAAAF,EAAA,+EACJV,EAAKjB,IAAL,UAAY5B,EAAZ,kBAA2CyD,KADvC,2CAAF,mDAAC,GAGZC,UAAU,WAAD,4BAAE,WAAO7C,GAAP,SAAA0C,EAAA,+EACFV,EAAKjB,IAAL,UAAY5B,EAAZ,WAA4C,CAAEa,YAD5C,2CAAF,mDAAC,GAGV8C,aAAa,WAAD,4BAAE,WAAOF,GAAP,SAAAF,EAAA,+EACLV,EAAKjB,IAAL,UAAY5B,EAAZ,uBAAgDyD,KAD3C,2CAAF,mDAAC,GAGbG,cAAc,WAAD,4BAAE,WAAO/C,GAAP,SAAA0C,EAAA,+EACNV,EAAKjB,IAAL,UAAY5B,EAAZ,eAAgD,CAAEa,YAD5C,2CAAF,mDAAC,GAGdgD,iBAAiB,WAAD,4BAAE,WAAOJ,GAAP,SAAAF,EAAA,+EACTV,EAAKjB,IAAL,UAAY5B,EAAZ,uBAAgDyD,KADvC,2CAAF,mDAAC,GAGjBK,aAAa,WAAD,4BAAE,WAAOpC,GAAP,2BAAA6B,EAAA,6DAAoB1C,EAApB,+BAA6B,GAA7B,kBACLgC,EAAKjB,IAAIF,EAAT,eAAmBb,KADd,2CAAF,mDAAC,IC9BFkD,EAAgBC,YAAiB,uBAAD,uCAAyB,WAAOnD,GAAP,qBAAA0C,EAAA,sEAC7CF,EAAOC,SAASzC,GAD6B,cAC9DoD,EAD8D,OAE5DC,EAASD,EAATC,KAF4D,EAGnDC,IAAWC,MAAMH,EAASI,QAAQpC,MAA3CqC,EAH4D,EAG5DA,KAH4D,kBAI7D,CAAEC,QAASL,EAAMpC,MAAOwC,IAJqC,2CAAzB,uDAOhCE,EAAmBR,YAAiB,0BAAD,uCAA4B,WAAOP,GAAP,iBAAAF,EAAA,sEACnDF,EAAOG,YAAYC,GADgC,cACpEQ,EADoE,OAElEC,EAASD,EAATC,KAFkE,kBAGnEA,GAHmE,2CAA5B,uDAMnCO,EAAqBT,YAAiB,4BAAD,uCAA8B,WAAOtC,GAAP,qBAAA6B,EAAA,sEACvDF,EAAOS,aAAapC,GADmC,cACxEuC,EADwE,OAEtEC,EAASD,EAATC,KAFsE,EAG7DC,IAAWC,MAAMH,EAASI,QAAQpC,MAA3CqC,EAHsE,EAGtEA,KAHsE,kBAIvE,CAAEC,QAASL,EAAMpC,MAAOwC,IAJ+C,2CAA9B,uDAOrCI,EAAiBV,YAAiB,wBAAD,uCAA0B,WAAOnD,GAAP,qBAAA0C,EAAA,sEAC/CF,EAAOK,UAAU7C,GAD8B,cAChEoD,EADgE,OAE9DC,EAASD,EAATC,KAF8D,EAGrDC,IAAWC,MAAMH,EAASI,QAAQpC,MAA3CqC,EAH8D,EAG9DA,KAH8D,kBAI/D,CAAEC,QAASL,EAAMpC,MAAOwC,IAJuC,2CAA1B,uDAOjCK,EAAoBX,YAAiB,2BAAD,uCAA6B,WAAOP,GAAP,iBAAAF,EAAA,sEACrDF,EAAOM,aAAaF,GADiC,cACtEQ,EADsE,OAEpEC,EAASD,EAATC,KAFoE,kBAGrEA,GAHqE,2CAA7B,uDAMpCU,EAAqBZ,YAAiB,0BAAD,uCAA4B,WAAOnD,GAAP,qBAAA0C,EAAA,sEACrDF,EAAOO,cAAc/C,GADgC,cACtEoD,EADsE,OAEpEC,EAASD,EAATC,KAFoE,EAG3DC,IAAWC,MAAMH,EAASI,QAAQpC,MAA3CqC,EAHoE,EAGpEA,KAHoE,kBAIrE,CAAEC,QAASL,EAAMpC,MAAOwC,IAJ6C,2CAA5B,uDAOrCO,EAAwBb,YAAiB,+BAAD,uCAAiC,WAAOP,GAAP,iBAAAF,EAAA,sEAC7DF,EAAOQ,iBAAiBJ,GADqC,cAC9EQ,EAD8E,OAE5EC,EAASD,EAATC,KAF4E,kBAG7EA,GAH6E,2CAAjC,uD,4BCzCxCY,I,OAAS,kBACpB,qBAAKrF,UAAU,cAAf,SACE,cAAC,KAAD,CAAUsF,KAAK,YAAYC,MAAM,UAAUC,OAAQ,IAAKC,MAAO,IAAKC,QAAS,UCMpEC,GAAO,SAAC,GAA0D,IAAxDC,EAAuD,EAAvDA,MAAO/F,EAAgD,EAAhDA,SAAUgG,EAAsC,EAAtCA,UAAW7F,EAA2B,EAA3BA,UACjD,OACE,qBAAKA,UAAWC,IAAG,OAAD,0BAAeD,GAAcA,IAA/C,SACG6F,EACC,cAAC,GAAD,IAEA,qCACE,cAAC,IAAD,UACE,gCAAQD,MAET/F,Q,2BCPEiG,I,OAAY,SAAC,GAAqD,IAAnDC,EAAkD,EAAlDA,QAAStB,EAAyC,EAAzCA,KAAMuB,EAAmC,EAAnCA,aAAmC,EACCC,oBAC3E,CACEF,UACAtB,OACAuB,gBAEFE,cACAC,cAPMC,EADoE,EACpEA,cAAeC,EADqD,EACrDA,kBAAmBC,EADkC,EAClCA,aAAcC,EADoB,EACpBA,KAAMC,EADc,EACdA,WAU9D,OACE,qBAAKxG,UApBS,aAoBd,SACE,kDAAWoG,KAAX,cACE,gCACGE,EAAaG,KAAI,SAAAC,GAAW,OAC3B,8CAAQA,EAAYC,uBAApB,aACGD,EAAY9B,QAAQ6B,KAAI,SAACG,GAAD,OACvB,+CAAQA,EAAOC,eAAeD,EAAOE,yBAArC,cACGF,EAAOG,OAAO,WACR,OAANH,QAAM,IAANA,OAAA,EAAAA,EAAQI,WACP,sBAAMhH,UAAU,wBAAhB,UACS,OAAN4G,QAAM,IAANA,OAAA,EAAAA,EAAQK,cAAe,cAAC,KAAD,IAAwB,cAAC,KAAD,OAG7C,OAANL,QAAM,IAANA,OAAA,EAAAA,EAAQM,YAAaN,EAAOrE,QAAUqE,EAAOG,OAAO,yBAM/D,iDAAWV,KAAX,aACGE,EAAKE,KAAI,SAACU,EAAKC,GAEd,OADAZ,EAAWW,GAET,8CAAQA,EAAIE,eAAZ,aACGF,EAAIG,MAAMb,KAAI,SAAAc,GACb,OAAO,8CAAQA,EAAKC,gBAAb,aAA8BD,EAAKR,OAAO,+BAWtDU,GAAqB,SAAC,GAAsE,IAAD,IAAnEb,OAAUc,EAAyD,EAAzDA,YAAaC,EAA4C,EAA5CA,UAAWC,EAAiC,EAAjCA,gBAAiB5D,EAAgB,EAAhBA,GAChF6D,EAAU1H,IAAM2H,SAAQ,WAC5B,IAAMD,EAAe,IAAIE,IAIzB,OAHAH,EAAgBI,SAAQ,SAACb,IACtBlG,EAAoBkG,EAAIc,OAAOjE,KAAQ6D,EAAQK,IAAIf,EAAIc,OAAOjE,OAE1D,aAAI6D,KACV,CAAC7D,EAAI4D,IAER,OACE,yBACE1G,MAAOwG,EACPS,SAAU,SAAAC,GAAC,OAAIA,EAAEC,cAAcC,QAC/BC,OAAQ,SAAAH,GACNT,EAAUS,EAAEI,OAAOtH,YAASuH,IAJhC,UAOE,wBAAQvH,MAAM,GAAd,iBACC2G,EAAQpB,KAAI,SAACiC,EAAQtB,GAAT,OACX,wBAAgBlG,MAAOwH,EAAvB,SACGA,GADUtB,UCpERuB,I,OAAa,SAAC,GAAsF,IAApFC,EAAmF,EAAnFA,UAAWC,EAAwE,EAAxEA,YAAaC,EAA2D,EAA3DA,SAAUC,EAAiD,EAAjDA,QAASC,EAAwC,EAAxCA,QAASC,EAA+B,EAA/BA,QACzEC,EAAyBC,uBAAY,SAACf,EAAwCgB,GAClFhB,EAAEiB,iBACFlI,EAAuB,OAAD,UAAYiI,MACjC,IAEGE,EAAuBH,uBAAY,SAACf,GACxCA,EAAEiB,iBACFlI,EAAuB,CAAEoI,KAAM,IAAKT,SAAS,GAAD,OAAKV,EAAEC,cAAcnH,WAChE,IAEH,OACE,sBAAKlB,UAAU,aAAf,UACE,wBACEA,UAAU,0BACVwJ,QAAS,SAAApB,GAAC,OAAIc,EAAuBd,EAAGpG,EAA0B+G,KAClEU,SAAUxI,EAAoB8H,GAHhC,kBAQCH,EAAY,GACXc,MAAMC,KAAKD,MAAMd,GAAWgB,QAAQnD,KAAI,SAAAoD,GAAK,OAC3C,wBAEE7J,UAAWC,IAAG,0BAA2B,CAAE,kCAAmC4I,IAAgBgB,EAAQ,IACtGL,QAAS,SAAApB,GAAC,OAAIc,EAAuBd,EAAGyB,EAAQ,IAChDJ,SAAUZ,IAAgBgB,EAAQ,EAJpC,SAMGA,EAAQ,GANX,eACeA,QASjB5I,EAAoBgI,IACpB,wBACEjJ,UAAU,0BACVwJ,QAAS,SAAApB,GAAC,OAAIc,EAAuBd,EAAGpG,EAA0BiH,KAClEQ,SAAUZ,IAAgB7G,EAA0BiH,GAHtD,kBASF,wBACEjJ,UAAU,0BACVwJ,QAAS,SAAApB,GAAC,OAAIc,EAAuBd,EAAGpG,EAA0BgH,KAClES,SAAUxI,EAAoB+H,GAHhC,kBAOA,yBAAQb,SAAU,SAAAC,GAAC,OAAIA,EAAEC,cAAcC,QAAQC,OAAQ,SAAAH,GAAC,OAAIkB,EAAqBlB,IAAIlH,MAAK,UAAK4H,GAA/F,UACE,wBAAQ5H,MAAM,IAAd,eACA,wBAAQA,MAAM,KAAd,gBACA,wBAAQA,MAAM,KAAd,gBACA,wBAAQA,MAAM,KAAd,gBACA,wBAAQA,MAAM,KAAd,gBACA,wBAAQA,MAAM,MAAd,yBCnDK4I,GAAgB,WAAO,IAC1BjE,EAAckE,aAAY,SAACC,GAAD,OAAsBA,EAAMC,WAAtDpE,UACAqE,EAAUH,aAAY,SAACC,GAAD,OAAsBA,EAAMG,YAAlDD,MACFE,EAAwBC,cACxBC,EAAYC,YAAe,QAC3BC,EAAgBD,YAAe,YALJ,EAQPE,mBAAS,CACjC5B,YAAa,EACbC,SAAU,EACVF,UAAW,EACXI,QAAS,GACTD,QAAS,GACTE,QAAS,KAdsB,mBAQ1Be,EAR0B,KAQnBU,EARmB,KAmBjCC,qBAAU,WACRD,GAAS,SAAAV,GAAK,kCACTA,GADS,IAEZnB,YAA2B,OAAdyB,GAAsBA,EAAY,EAC/CxB,SAA4B,OAAlB0B,GAA0BA,EAAgB,SAErD,CAACF,EAAWE,IAGfG,qBAAU,WACR,GAAIX,EAAMnB,aAAemB,EAAMlB,SAAU,CACvC,IAAM8B,EAAeR,EAAS9F,EAAc,CAAEiF,KAAMS,EAAMnB,YAAaC,SAAUkB,EAAMlB,YACvF,OAAO,WACL8B,EAAaC,YAGhB,CAACb,EAAMnB,YAAamB,EAAMlB,SAAUsB,IAGvCO,qBAAU,WACR,IAAK7J,EAAmBoJ,EAAM7H,OAAQ,CACpC,IAAM2G,EAAU5G,EAAY8H,EAAM7H,MAAO,QACnC0G,EAAU3G,EAAY8H,EAAM7H,MAAO,QACnC4G,EAAU7G,EAAY8H,EAAM7H,MAAO,QACnCuG,EAAY5G,EAA0BiH,GAE5CyB,GAAS,SAAAV,GAAK,kCAAUA,GAAV,IAAiBhB,UAASD,UAASE,UAASL,oBAE3D,CAACsB,EAAM7H,QAGV,IAAM0D,EAAU+B,mBACd,iBAAM,CACJ,CACEgD,OAAQ,GACRC,SAAU,OACVC,KAAM,SAAC3K,GAAgB,IAEZ4K,EACL5K,EADF8G,IAAO8D,SAGT,OACE,cAAC,IAAD,CAAMrL,KAAI,gBAAW6C,EAAuBwI,EAASvI,MAArD,SACE,qBACE1C,UAAU,YACVkL,IAAKxK,EAAqBuK,EAAStK,KAAMjB,EAAcyL,QACvDC,IAAKH,EAAS9H,WAMxB,CACE2H,OAAQ,QACRC,SAAU,OACVC,KAAM,SAAC3K,GAAgB,IAEZ4K,EACL5K,EADF8G,IAAO8D,SAET,OAAO,cAAC,IAAD,CAAMrL,KAAI,gBAAW6C,EAAuBwI,EAASvI,MAArD,SAA8DuI,EAAS9H,SAGlF,CACE2H,OAAQ,UACRC,SAAU,WAEZ,CACED,OAAQ,eACRC,SAAU,YAEZ,CACED,OAAQ,YACRC,SAAU,aAEZ,CACED,OAAQ,UACRC,SAAU,WAEZ,CACED,OAAQ,SACRC,SAAU,aAEZ,CACED,OAAQ,OACRC,SAAU,gBACVC,KAAM,SAAC3K,GAAgB,IACba,EAAUb,EAAVa,MAER,OAAO,iCAAOA,EAAP,iBAIb,IAGF,OAAOf,IAAM2H,SACX,kBACE,eAAC,GAAD,CAAMlC,MAAM,cAAc5F,UAAU,QAAQ6F,UAAWA,EAAvD,UACE,cAAC,GAAD,CACEE,QAASA,EACTtB,KAAMyF,EAAMpF,QACZkB,aAAc,CACZqF,OAAQ,CACN,CACErH,GAAI,OACJsH,MAAM,OAMd,cAAC,GAAD,CACE1C,UAAWoB,EAAMpB,UACjBC,YAAamB,EAAMnB,YACnBC,SAAUkB,EAAMlB,SAChBC,QAASiB,EAAMjB,QACfC,QAASgB,EAAMhB,QACfC,QAASe,EAAMf,eAIrB,CAACiB,EAAOnE,EAASF,EAAWmE,KCjJnBuB,GAAuB,SAAC,GAAkC,IAC7DvH,EAD4D,EAA/B5C,OAC7B4C,GACA6B,EAAckE,aAAY,SAACC,GAAD,OAAsBA,EAAMC,WAAtDpE,UACA2F,EAA0BzB,aAAY,SAACC,GAAD,OAAsBA,EAAMG,YAAlEqB,KACFpB,EAAwBC,cAU9B,OAPAM,qBAAU,WACR,GAAI3G,EAAI,CACN,IAAMyH,EAAUrB,EAASrF,EAAiBf,IAC1C,OAAO,kBAAMyH,EAAQZ,YAEtB,CAAC7G,EAAIoG,IAEDjK,IAAM2H,SACX,kBACE,eAAC,GAAD,CAAMlC,MAAK,sBAAiB4F,EAAKrI,KAAOqI,EAAKrI,KAAO,OAASnD,UAAU,oBAAoB6F,UAAWA,EAAtG,UACE,wBAAQ2D,QAAS,SAAApB,GAAC,OAAItG,KAAtB,kBACA,8BACE,+BAAO4J,KAAKC,UAAUH,EAAM,KAAM,eAIxC,CAACA,EAAM3F,KCzBE+F,I,OAAY,SAAC,GAAgD,IAA9C3J,EAA6C,EAA7CA,IAAKrC,EAAwC,EAAxCA,KAAMiM,EAAkC,EAAlCA,YAAkC,EAC7CpB,mBAAS,MADoC,mBAChEqB,EADgE,KACzDC,EADyD,KAgBvE,OAbApB,qBAAU,WACR,IAAMqB,EAAS3I,IAAM4I,YAAYD,SASjC,OARApI,EACGS,aAAapC,EAAK,CAAEiK,YAAaF,EAAOG,QACxCC,MAAK,YAAe,IAAD,EAAX3H,EAAW,EAAXA,KACPsH,EAAQ,UAACtH,EAAKoH,UAAN,QAAsB,OAE/BQ,OAAM,SAAAC,OAGF,kBAAMN,EAAOO,YACnB,CAACtK,EAAK4J,IAEF1L,IAAM2H,SACX,kBACE,qBAAK9H,UAAU,aAAf,SACE,cAAC,IAAD,CAAMJ,KAAMA,EAAZ,SAAmBkM,QAGvB,CAAClM,EAAMkM,MC/BEU,GAAY,SAACtL,EAAeuL,EAAkBZ,GACzD,OAAQ5K,EAAoBC,GAG1B,GAFA,cAAC,GAAD,CAAWe,IAAKf,EAAOtB,KAAI,WAAM6M,EAAN,YAAkBhK,EAAuBvB,IAAU2K,YAAaA,KAMlFa,GAAa,SAAC3L,EAAW0L,EAAkBZ,GACtD,IAAMc,EAAW5L,EACjB,OAAQD,EAAmB6L,GASvB,GARAA,EAASlG,KAAI,SAACxE,EAAa4H,GAAd,OACX,cAAC,GAAD,CAEE5H,IAAKA,EACLrC,KAAI,WAAM6M,EAAN,YAAkBhK,EAAuBR,IAC7C4J,YAAaA,GAJf,UACU5J,QCHL2K,GAAkB,WAAO,IAC5B/G,EAAckE,aAAY,SAACC,GAAD,OAAsBA,EAAMC,WAAtDpE,UACAgH,EAAW9C,aAAY,SAACC,GAAD,OAAsBA,EAAMG,YAAnD0C,OACFzC,EAAwBC,cACxBC,EAAYC,YAAe,QAC3BC,EAAgBD,YAAe,YALF,EAOTE,mBAAS,CACjC5B,YAAa,EACbC,SAAU,EACVF,UAAW,EACXI,QAAS,GACTD,QAAS,GACTE,QAAS,KAbwB,mBAO5Be,EAP4B,KAOrBU,EAPqB,KAkBnCC,qBAAU,WACRD,GAAS,SAAAV,GAAK,kCACTA,GADS,IAEZnB,YAA2B,OAAdyB,GAAsBA,EAAY,EAC/CxB,SAA4B,OAAlB0B,GAA0BA,EAAgB,UAErD,CAACF,EAAWE,IAGfG,qBAAU,WACR,GAAIX,EAAMnB,aAAemB,EAAMlB,SAAU,CACvC,IAAMgE,EAAgB1C,EAASnF,EAAe,CAAEsE,KAAMS,EAAMnB,YAAaC,SAAUkB,EAAMlB,YACzF,OAAO,WACLgE,EAAcjC,YAGjB,CAACb,EAAMnB,YAAamB,EAAMlB,SAAUsB,IAGvCO,qBAAU,WACR,IAAK7J,EAAmB+L,EAAOxK,OAAQ,CACrC,IAAM2G,EAAU5G,EAAYyK,EAAOxK,MAAO,QACpC0G,EAAU3G,EAAYyK,EAAOxK,MAAO,QACpC4G,EAAU7G,EAAYyK,EAAOxK,MAAO,QACpCuG,EAAY5G,EAA0BiH,GAE5CyB,GAAS,SAAAV,GAAK,kCAAUA,GAAV,IAAiBhB,UAASD,UAASE,UAASL,oBAE3D,CAACiE,EAAOxK,QAGX,IAAM0D,EAAU+B,mBACd,iBAAM,CACJ,CACEgD,OAAQ,OACRC,SAAU,OACVC,KAAM,SAAC3K,GAAgB,IAEZ4K,EACL5K,EADF8G,IAAO8D,SAEH8B,EAAUtK,EAAuBwI,EAASvI,KAChD,OAAO,cAAC,IAAD,CAAM9C,KAAI,iBAAYmN,GAAtB,SAAkC9B,EAAS9H,SAGtD,CACE2H,OAAQ,SACRC,SAAU,UAEZ,CACED,OAAQ,WACRC,SAAU,WACVC,KAAM,SAAC3K,GAAD,OAAgBmM,GAAUnM,EAAMa,MAAO,YAAa,UAE5D,CACE4J,OAAQ,eACRC,SAAU,cACVC,KAAM,SAAC3K,GAAD,OAAgBmM,GAAUnM,EAAMa,MAAO,YAAa,UAE5D,CACE4J,OAAQ,OACRC,SAAU,OACVC,KAAM,SAAC3K,GAAD,OAAgBmM,GAAUnM,EAAMa,MAAO,YAAa,UAE5D,CACE4J,OAAQ,UACRC,SAAU,SACVC,KAAM,SAAC3K,GAAgB,IAAD,EAEX4K,EACL5K,EADF8G,IAAO8D,SAET,OACE,qCACE,sBAAKjL,UAAU,UAAf,UACE,yCADF,UAEGiL,EAAS+B,eAFZ,QAEuB,SAEvB,sBAAKhN,UAAU,UAAf,UACE,yCACCiL,EAASgC,QAAUT,GAAUvB,EAASgC,QAAS,YAAa,QAAU,SAEzE,sBAAKjN,UAAU,SAAf,UACE,wCACEc,EAAmBmK,EAASiC,QAE1B,MADAjC,EAASiC,OAAOzG,KAAI,SAACb,GAAD,OAAmB,4BAAgBA,GAARA,SAGrD,sBAAK5F,UAAU,eAAf,UACE,8CACCiL,EAASkC,cAEZ,sBAAKnN,UAAU,QAAf,UACE,uCACCiL,EAASmC,SAEZ,sBAAKpN,UAAU,gBAAf,UACE,+CACCiL,EAASoC,aAAeX,GAAWzB,EAASoC,aAAc,YAAa,QAAU,iBAO9F,IAGF,OAAOlN,IAAM2H,SACX,kBACE,eAAC,GAAD,CAAMlC,MAAM,eAAe5F,UAAU,SAAS6F,UAAWA,EAAzD,UACE,cAAC,GAAD,CAAWE,QAASA,EAAStB,KAAMoI,EAAO/H,UAC1C,cAAC,GAAD,CACE8D,UAAWoB,EAAMpB,UACjBC,YAAamB,EAAMnB,YACnBC,SAAUkB,EAAMlB,SAChBC,QAASiB,EAAMjB,QACfC,QAASgB,EAAMhB,QACfC,QAASe,EAAMf,eAIrB,CAAC4D,EAAQ9G,EAASF,EAAWmE,KCzIpBsD,GAAwB,SAAC,GAAmC,IAC/DtJ,EAD8D,EAAhC5C,OAC9B4C,GACA6B,EAAckE,aAAY,SAACC,GAAD,OAAsBA,EAAMC,WAAtDpE,UACA0H,EAA6BxD,aAAY,SAACC,GAAD,OAAsBA,EAAMG,YAArEoD,MACFnD,EAAwBC,cAU9B,OAPAM,qBAAU,WACR,GAAI3G,EAAI,CACN,IAAMyH,EAAUrB,EAASlF,EAAkBlB,IAC3C,OAAO,kBAAMyH,EAAQZ,YAEtB,CAAC7G,EAAIoG,IAEDjK,IAAM2H,SACX,kBACE,eAAC,GAAD,CAAMlC,MAAK,8BAAkB2H,QAAlB,IAAkBA,OAAlB,EAAkBA,EAAOpK,MAAQnD,UAAU,gBAAgB6F,UAAWA,EAAjF,UACE,wBAAQ2D,QAAS,SAAApB,GAAC,OAAItG,KAAtB,kBACA,8BACE,+BAAO4J,KAAKC,UAAU4B,EAAO,KAAM,eAIzC,CAACA,EAAO1H,KClBC2H,GAAsB,WAAO,IAChC3H,EAAckE,aAAY,SAACC,GAAD,OAAsBA,EAAMC,WAAtDpE,UACA4H,EAAe1D,aAAY,SAACC,GAAD,OAAsBA,EAAMG,YAAvDsD,WACFrD,EAAwBC,cACxBC,EAAYC,YAAe,QAC3BC,EAAgBD,YAAe,YALE,EAObE,mBAAS,CACjC5B,YAAa,EACbC,SAAU,EACVF,UAAW,EACXI,QAAS,GACTD,QAAS,GACTE,QAAS,KAb4B,mBAOhCe,EAPgC,KAOzBU,EAPyB,KAkBvCC,qBAAU,WACRD,GAAS,SAAAV,GAAK,kCACTA,GADS,IAEZnB,YAA2B,OAAdyB,GAAsBA,EAAY,EAC/CxB,SAA4B,OAAlB0B,GAA0BA,EAAgB,UAErD,CAACF,EAAWE,IAGfG,qBAAU,WACR,GAAIX,EAAMnB,aAAemB,EAAMlB,SAAU,CACvC,IAAMgE,EAAgB1C,EAASjF,EAAmB,CAAEoE,KAAMS,EAAMnB,YAAaC,SAAUkB,EAAMlB,YAC7F,OAAO,WACLgE,EAAcjC,YAGjB,CAACb,EAAMnB,YAAamB,EAAMlB,SAAUsB,IAGvCO,qBAAU,WACR,IAAK7J,EAAmB2M,EAAWpL,OAAQ,CACzC,IAAM2G,EAAU5G,EAAYqL,EAAWpL,MAAO,QACxC0G,EAAU3G,EAAYqL,EAAWpL,MAAO,QACxC4G,EAAU7G,EAAYqL,EAAWpL,MAAO,QACxCuG,EAAY5G,EAA0BiH,GAE5CyB,GAAS,SAAAV,GAAK,kCAAUA,GAAV,IAAiBhB,UAASD,UAASE,UAASL,oBAE3D,CAAC6E,EAAWpL,QAGf,IAAM0D,EAAU+B,mBACd,iBAAM,CACJ,CACEgD,OAAQ,OACRC,SAAU,OACVC,KAAM,SAAC3K,GAAgB,IAEZ4K,EACL5K,EADF8G,IAAO8D,SAEHyC,EAAcjL,EAAuBwI,EAASvI,KACpD,OACE,qCACE,cAAC,IAAD,CAAM9C,KAAI,qBAAgB8N,GAA1B,SACGzM,EAAoBgK,EAAS9H,MAAQ,MAAQ8H,EAAS9H,QAEvDrC,EAAmBmK,EAAS0C,UAC5B,sBAAK3N,UAAU,UAAf,UACE,0CACCiL,EAAS0C,QAAQlH,KAAI,SAACmH,GAAD,OACpB,4BAAgBA,GAARA,cAQtB,CACE9C,OAAQ,SACRC,SAAU,SACV8C,OAAQpG,GACRqG,eAAe,EACfvL,OAAQ,YAEV,CACEuI,OAAQ,UACRC,SAAU,UACV8C,OAAQpG,GACRqG,eAAe,EACfvL,OAAQ,YAEV,CACEuI,OAAQ,SACRC,SAAU,SACVC,KAAM,SAAC3K,GAAgB,IAEZ4K,EACL5K,EADF8G,IAAO8D,SAET,OACE,iCACIhK,EAAoBgK,EAAS8C,SAC7B,2CAAcvB,GAAUvB,EAAS8C,OAAQ,YAAa,YAEtD9M,EAAoBgK,EAAS+C,SAC7B,2CAAcxB,GAAUvB,EAAS+C,OAAQ,YAAa,YAEtD/M,EAAoBgK,EAASgD,SAC7B,2CAAczB,GAAUvB,EAASgD,OAAQ,YAAa,gBAMhE,CACEnD,OAAQ,cACRC,SAAU,cACVC,KAAM,SAAC3K,GAAD,OAAgBqM,GAAWrM,EAAMa,MAAO,QAAS,UAEzD,CACE4J,OAAQ,QACRC,SAAU,QACVC,KAAM,SAAC3K,GAAD,OAAgBqM,GAAWrM,EAAMa,MAAO,OAAQ,SACtD2M,OAAQK,GACR3L,OAAQ,WACRuL,eAAe,GAEjB,CACEhD,OAAQ,YACRC,SAAU,WACVC,KAAM,SAAC3K,GAAD,OAAgBqM,GAAWrM,EAAMa,MAAO,OAAQ,aAW1D,IAGF,OAAO4G,mBACL,kBACE,eAAC,GAAD,CAAMlC,MAAM,mBAAmB5F,UAAU,aAAa6F,UAAWA,EAAjE,UACE,cAAC,GAAD,CAAWE,QAASA,EAAStB,KAAMgJ,EAAW3I,UAC9C,cAAC,GAAD,CACE8D,UAAWoB,EAAMpB,UACjBC,YAAamB,EAAMnB,YACnBC,SAAUkB,EAAMlB,SAChBC,QAASiB,EAAMjB,QACfC,QAASgB,EAAMhB,QACfC,QAASe,EAAMf,eAIrB,CAACwE,EAAY1H,EAASiE,EAAOnE,KAIpBqI,GAAmB,SAAC,GAAsE,IAAD,IAAnEtH,OAAUc,EAAyD,EAAzDA,YAAaC,EAA4C,EAA5CA,UAAWC,EAAiC,EAAjCA,gBAAiB5D,EAAgB,EAAhBA,GAC9E6D,EAAU1H,IAAM2H,SAAQ,WAC5B,IAAMD,EAAe,IAAIE,IAOzB,OANAH,EAAgBI,SAAQ,SAACb,IACtBrG,EAAmBqG,EAAIc,OAAOjE,KAC7BmD,EAAIc,OAAOjE,GAAIgE,SAAQ,SAACmG,GACtBtG,EAAQK,IAAIiG,SAGX,aAAItG,KACV,CAAC7D,EAAI4D,IAER,OACE,yBACE1G,MAAOwG,EACPS,SAAU,SAAAC,GAAC,OAAIA,EAAEC,cAAcC,QAC/BC,OAAQ,SAAAH,GACNT,EAAUS,EAAEI,OAAOtH,YAASuH,IAJhC,UAOE,wBAAQvH,MAAM,GAAd,iBACC2G,EAAQpB,KAAI,SAACiC,EAAQtB,GAAT,OACX,wBAAgBlG,MAAOwH,EAAvB,wBACWjG,EAAuBiG,KADrBtB,UC3LRgH,GAA4B,SAAC,GAAuC,IACvEpK,EADsE,EAApC5C,OAClC4C,GACA6B,EAAckE,aAAY,SAACC,GAAD,OAAsBA,EAAMC,WAAtDpE,UACAwI,EAAyCtE,aAAY,SAACC,GAAD,OAAsBA,EAAMG,YAAjFkE,UACFjE,EAAwBC,cAU9B,OAPAM,qBAAU,WACR,GAAI3G,EAAI,CACN,IAAMyH,EAAUrB,EAAShF,EAAsBpB,IAC/C,OAAO,kBAAMyH,EAAQZ,YAEtB,CAAC7G,EAAIoG,IAEDjK,IAAM2H,SACX,kBACE,eAAC,GAAD,CACElC,MAAK,2BAAsByI,EAAUlL,KAAOkL,EAAUlL,KAAO,OAC7DnD,UAAU,oBACV6F,UAAWA,EAHb,UAKE,wBAAQ2D,QAAS,SAAApB,GAAC,OAAItG,KAAtB,kBACA,8BACE,+BAAO4J,KAAKC,UAAU0C,EAAW,KAAM,eAI7C,CAACA,EAAWxI,KCnBDyI,GAbA,WACb,OACE,eAAC,IAAD,CAAQC,KAAK,gBAAb,UACE,cAAC,IAAD,CAAOC,KAAK,IAAIC,UAAW3E,KAC3B,cAAC,IAAD,CAAO0E,KAAK,YAAYC,UAAWlD,KACnC,cAAC,IAAD,CAAOiD,KAAK,UAAUC,UAAW7B,KACjC,cAAC,IAAD,CAAO4B,KAAK,aAAaC,UAAWnB,KACpC,cAAC,IAAD,CAAOkB,KAAK,cAAcC,UAAWjB,KACrC,cAAC,IAAD,CAAOgB,KAAK,iBAAiBC,UAAWL,SCyC/BM,GApDH,WACV,IAAMC,EAAiBC,iBAAO,MADd,EAEwBnE,oBAAS,GAFjC,mBAEToE,EAFS,KAEKC,EAFL,KAIVC,EAAkB,WACtBD,GAAgB,IAGZE,EAAoB,WACxBF,GAAgB,IAuBlB,OAnBAnE,qBAAU,WAAO,IACPsE,EAAwCN,EAAxCM,QACR,GAAgB,OAAZA,EAAkB,CACpB,IAAMC,EAAW,IAAIC,IAASF,EAAS,CACrCG,UAAW,CACTC,GAAI,EACJC,KAAM,GAERC,MAAOR,EACPS,QAASR,IAIX,OAFAE,EAASO,OAEF,WACLP,EAASQ,cAGZ,IAGD,sBACE1P,UAAWC,IAAG,iBAAkB,CAC9B,gCAAiC4O,EACjC,mCAAoCA,IAHxC,UAME,cAAC3O,EAAD,CAAeI,IAAKqO,IACpB,+BACE,cAAC,GAAD,MAEF,wBAAQ3O,UAAU,SAAlB,SACE,qBAAKA,UAAU,oBAAf,SACE,mBAAGA,UAAU,oBAAb,kDCtCK2P,GAZS,SAACC,GACnBA,GAAeA,aAAuBC,UACxC,8BAAqBzD,MAAK,YAAkD,IAA/C0D,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,O,SCQRO,GAAoB,SAACnG,EAAcnE,GACvCmE,EAAMnE,UAAYA,GA0CLuK,GAvCaC,YAAY,CACtClN,KAAM,UACN6C,aAAc,CACZsK,WAAY,KACZzK,WAAW,GAEb0K,SAAU,CACRC,iBAAkB,SAACxG,EAAOyG,GACxBzG,EAAMsG,WAAaG,EAAOC,UAI9BC,eAAa,8BACPrM,EAAcsM,UAAY,SAAA5G,GAAK,OAAImG,GAAkBnG,GAAO,MADrD,yBAEPjF,EAAiB6L,UAAY,SAAA5G,GAAK,OAAImG,GAAkBnG,GAAO,MAFxD,yBAGPhF,EAAmB4L,UAAY,SAAA5G,GAAK,OAAImG,GAAkBnG,GAAO,MAH1D,yBAIP/E,EAAe2L,UAAY,SAAA5G,GAAK,OAAImG,GAAkBnG,GAAO,MAJtD,yBAKP9E,EAAkB0L,UAAY,SAAA5G,GAAK,OAAImG,GAAkBnG,GAAO,MALzD,yBAMP7E,EAAmByL,UAAY,SAAA5G,GAAK,OAAImG,GAAkBnG,GAAO,MAN1D,yBAOP5E,EAAsBwL,UAAY,SAAA5G,GAAK,OAAImG,GAAkBnG,GAAO,MAP7D,yBASP1F,EAAcuM,YAAc,SAAA7G,GAAK,OAAImG,GAAkBnG,GAAO,MATvD,yBAUPjF,EAAiB8L,YAAc,SAAA7G,GAAK,OAAImG,GAAkBnG,GAAO,MAV1D,yBAWPhF,EAAmB6L,YAAc,SAAA7G,GAAK,OAAImG,GAAkBnG,GAAO,MAX5D,yBAYP/E,EAAe4L,YAAc,SAAA7G,GAAK,OAAImG,GAAkBnG,GAAO,MAZxD,yBAaP9E,EAAkB2L,YAAc,SAAA7G,GAAK,OAAImG,GAAkBnG,GAAO,MAb3D,yBAcP7E,EAAmB0L,YAAc,SAAA7G,GAAK,OAAImG,GAAkBnG,GAAO,MAd5D,yBAeP5E,EAAsByL,YAAc,SAAA7G,GAAK,OAAImG,GAAkBnG,GAAO,MAf/D,yBAiBP1F,EAAcwM,WAAa,SAAA9G,GAAK,OAAImG,GAAkBnG,GAAO,MAjBtD,yBAkBPjF,EAAiB+L,WAAa,SAAA9G,GAAK,OAAImG,GAAkBnG,GAAO,MAlBzD,yBAmBPhF,EAAmB8L,WAAa,SAAA9G,GAAK,OAAImG,GAAkBnG,GAAO,MAnB3D,yBAoBP/E,EAAe6L,WAAa,SAAA9G,GAAK,OAAImG,GAAkBnG,GAAO,MApBvD,yBAqBP9E,EAAkB4L,WAAa,SAAA9G,GAAK,OAAImG,GAAkBnG,GAAO,MArB1D,yBAsBP7E,EAAmB2L,WAAa,SAAA9G,GAAK,OAAImG,GAAkBnG,GAAO,MAtB3D,yBAuBP5E,EAAsB0L,WAAa,SAAA9G,GAAK,OAAImG,GAAkBnG,GAAO,MAvB9D,KA2Bf,QCGe+G,GAlDcV,YAAY,CACvClN,KAAM,WACN6C,aAAc,CACZkE,MAAO,CACLpF,QAAS,GACTzC,MAAO,IAETwK,OAAQ,CACN/H,QAAS,GACTzC,MAAO,IAEToL,WAAY,CACV3I,QAAS,GACTzC,MAAO,IAETmJ,KAAM,GACN+B,MAAO,GACPc,UAAW,IAEbkC,SAAU,GAEVI,eAAa,8BACPrM,EAAcuM,YAAc,SAAC7G,EAAD,GAAyB,IAAf0G,EAAc,EAAdA,QACxC1G,EAAME,MAAMpF,QAAU4L,EAAQ5L,QAC9BkF,EAAME,MAAM7H,MAAQqO,EAAQrO,SAHnB,yBAKP0C,EAAiB8L,YAAc,SAAC7G,EAAD,GAAyB,IAAf0G,EAAc,EAAdA,QAC3C1G,EAAMwB,KAAOkF,KANJ,yBAQP1L,EAAmB6L,YAAc,SAAC7G,EAAD,GAAyB,IAAf0G,EAAc,EAAdA,QAC7C1G,EAAME,MAAMpF,QAAU4L,EAAQ5L,QAC9BkF,EAAME,MAAM7H,MAAQqO,EAAQrO,SAVnB,yBAYP4C,EAAe4L,YAAc,SAAC7G,EAAD,GAAyB,IAAf0G,EAAc,EAAdA,QACzC1G,EAAM6C,OAAO/H,QAAU4L,EAAQ5L,QAC/BkF,EAAM6C,OAAOxK,MAAQqO,EAAQrO,SAdpB,yBAgBP6C,EAAkB2L,YAAc,SAAC7G,EAAD,GAAyB,IAAf0G,EAAc,EAAdA,QAC5C1G,EAAMuD,MAAQmD,KAjBL,yBAmBPvL,EAAmB0L,YAAc,SAAC7G,EAAD,GAAyB,IAAf0G,EAAc,EAAdA,QAC7C1G,EAAMyD,WAAW3I,QAAU4L,EAAQ5L,QACnCkF,EAAMyD,WAAWpL,MAAQqO,EAAQrO,SArBxB,yBAuBP+C,EAAsByL,YAAc,SAAC7G,EAAD,GAAyB,IAAf0G,EAAc,EAAdA,QAChD1G,EAAMqE,UAAYqC,KAxBT,KA6Bf,QCxDMM,GAAcC,aAAgB,CAClChH,WACAE,cAWaxG,GARDuN,YAAe,CAC3BC,QAASH,KCAXI,IAASrK,OACP,cAAC,IAAMsK,WAAP,UACE,cAAC,IAAD,CAAU1N,MAAOA,GAAjB,SACE,cAAC,IAAD,UACE,cAAC,GAAD,UAIN2N,SAASC,eAAe,SAM1B5B,M","file":"static/js/main.6748e257.chunk.js","sourcesContent":["import { OPEN_LIBRARY_COVER_URL } from '../constants'\n\nexport enum BookCoverSize {\n  Small = 'S',\n  Medium = 'M',\n  Large = 'L',\n}\n\n/**\n * Ruturns Open Library Image URL\n * @param isbn {String}\n * @param size {String}\n */\nexport const getBookCoverImageUrl = (isbn: string, size = BookCoverSize.Small): string =>\n  `${OPEN_LIBRARY_COVER_URL}/${isbn}-${size}.jpg`\n\n/**\n * Ruturns an array of paths\n * @param uri {String}\n * @returns {Array}\n */\nexport const getPathsFromUri = (uri: string): string[] => new URL(uri).pathname.split('/')\n\n/**\n * Returns true or false\n * @param array {Array}\n */\nexport const isArrayEmptyOrNull = (array: any[]): boolean => !array || (array && array.length === 0)\n\n/**\n * Returns last item of the array\n * @param array {Array}\n */\nexport const getArrayLastItem = (array: any[]): any => (!isArrayEmptyOrNull(array) ? array[array.length - 1] : null)\n\n/**\n * Returns true or false\n * @param value {String | null | undefined}\n */\nexport const isStringEmptyOrNull = (value: string | null | undefined): boolean => value === null || value?.length === 0\n\n/**\n * Push new query param to history\n * @param param {String | Object}\n * @param (Optional) value\n */\ntype QueryParamsProp = {\n  [key: string]: string\n}\nexport const historyPushQueryParams = (params: string | QueryParamsProp, value?: string): void => {\n  const url = new URL(`${window.location}`)\n  const searchParams = url.searchParams\n  typeof params === 'string' && value && searchParams.set(params, value)\n  if (typeof params === 'object') {\n    for (const key in params) {\n      searchParams.set(key, params[key])\n    }\n  }\n  window.history.pushState(null, '', `?${searchParams.toString()}`)\n}\n/**\n * Go back in Browser History\n */\nexport const historyGoBack = (): void => {\n  window.history.back()\n}\n\n/**\n * Return the page number from url param\n * @param uri\n */\nexport const getPageNumberFromUriParam = (uri: string | null | undefined): number => {\n  const pageNumber = new URL(uri ?? '').searchParams.get('page')\n  return pageNumber ? +pageNumber : 0\n}\n\n/**\n * Filter Links for Uri by Rel value\n * @param links\n * @param rel\n */\nexport const getUriByRel = (links: any[], rel: string): string => {\n  const [link]: { uri: string; rel: string }[] = links.filter((link: any) => link.rel === rel)\n  return link ? link.uri : ''\n}\n\n/**\n * Extract the last path of url path\n * Returns String\n * @param url\n */\nexport const getLastPathnameFromUrl = (url: string): string | null => {\n  const pathname = new URL(url).pathname\n  return getArrayLastItem(pathname.split('/'))\n}\n","import React from 'react'\nimport { Link, useRoute } from 'wouter'\nimport cn from 'classnames'\n\nimport './primary-header.scss'\n\ntype NavItemProps = {\n  href: string\n  children: any\n}\n\nconst NavItem = ({ href, children }: NavItemProps) => {\n  const [isActive] = useRoute(href)\n  return isActive ? (\n    <span className={cn('primary-header__nav__item', { 'primary-header__nav__item--active': isActive })}>\n      {children}\n    </span>\n  ) : (\n    <Link href={href}>\n      <a className={cn('primary-header__nav__item', { 'primary-header__nav__item--active': isActive })} href={href}>\n        {children}\n      </a>\n    </Link>\n  )\n}\n\nexport const PrimaryHeader = React.forwardRef<HTMLHeadElement>((props, ref) => (\n  <header ref={ref} className=\"primary-header headroom\">\n    <div className=\"primary-header__container\">\n      <h1 className=\"primary-header__title\">\n        <Link href=\"/\">GOT</Link>\n      </h1>\n\n      <nav className=\"primary-header__nav\">\n        <NavItem href=\"/\">Books</NavItem>\n        <NavItem href=\"/houses\">Houses</NavItem>\n        <NavItem href=\"/characters\">Characters</NavItem>\n      </nav>\n    </div>\n  </header>\n))\n","export const ICE_FIRE_ENDPOINT_URL = process.env.REACT_APP_GOT_ENDPOINT_URL\nexport const OPEN_LIBRARY_COVER_URL = process.env.REACT_APP_OPEN_LIBRARY_COVER_URL\nexport const REST_CACHE_LIFE = 1800000 // 30 minutes in milliseconds\n","import axios from 'axios'\nimport { setupCache } from 'axios-cache-adapter'\nimport localforage from 'localforage'\n\nimport { Pagination } from '../models'\nimport { ICE_FIRE_ENDPOINT_URL, REST_CACHE_LIFE } from '../constants'\n\nconst forageStore = localforage.createInstance({\n  driver: [localforage.INDEXEDDB, localforage.LOCALSTORAGE],\n  name: 'got-cache',\n})\n\nconst http = axios.create({\n  baseURL: ICE_FIRE_ENDPOINT_URL,\n  adapter: setupCache({ maxAge: REST_CACHE_LIFE, store: forageStore }).adapter,\n})\n\nexport const gotApi = {\n  getBooks: async (params?: Pagination) => {\n    return http.get(`${ICE_FIRE_ENDPOINT_URL}/books`, { params })\n  },\n  getBookById: async (id: string) => {\n    return http.get(`${ICE_FIRE_ENDPOINT_URL}/books/${id}`)\n  },\n  getHouses: async (params?: Pagination) => {\n    return http.get(`${ICE_FIRE_ENDPOINT_URL}/houses`, { params })\n  },\n  getHouseById: async (id?: string) => {\n    return http.get(`${ICE_FIRE_ENDPOINT_URL}/characters/${id}`)\n  },\n  getCharacters: async (params?: Pagination) => {\n    return http.get(`${ICE_FIRE_ENDPOINT_URL}/characters`, { params })\n  },\n  getCharacterById: async (id?: string) => {\n    return http.get(`${ICE_FIRE_ENDPOINT_URL}/characters/${id}`)\n  },\n  getDataByUri: async (uri: string, params = {}) => {\n    return http.get(uri, { ...params })\n  },\n}\n","import { createAsyncThunk } from '@reduxjs/toolkit'\nimport LinkHeader from 'http-link-header'\n\nimport { Pagination } from '../../models'\nimport { gotApi } from '../../services/gotApi.service'\n\nexport const fetchGotBooks = createAsyncThunk('@fetch/fetchGotBooks', async (params?: Pagination) => {\n  const response = await gotApi.getBooks(params)\n  const { data } = response\n  const { refs } = LinkHeader.parse(response.headers.link)\n  return { results: data, links: refs }\n})\n\nexport const fetchGotBookById = createAsyncThunk('@fetch/fetchGotBookById', async (id: string) => {\n  const response = await gotApi.getBookById(id)\n  const { data } = response\n  return data\n})\n\nexport const fetchGotBooksByUri = createAsyncThunk('@fetch/fetchGotBooksByUri', async (uri: string) => {\n  const response = await gotApi.getDataByUri(uri)\n  const { data } = response\n  const { refs } = LinkHeader.parse(response.headers.link)\n  return { results: data, links: refs }\n})\n\nexport const fetchGotHouses = createAsyncThunk('@fetch/fetchGotHouses', async (params?: Pagination) => {\n  const response = await gotApi.getHouses(params)\n  const { data } = response\n  const { refs } = LinkHeader.parse(response.headers.link)\n  return { results: data, links: refs }\n})\n\nexport const fetchGotHouseById = createAsyncThunk('@fetch/fetchGotHouseById', async (id: string) => {\n  const response = await gotApi.getHouseById(id)\n  const { data } = response\n  return data\n})\n\nexport const fetchGotCharacters = createAsyncThunk('@fetch/getGotCharacters', async (params?: Pagination) => {\n  const response = await gotApi.getCharacters(params)\n  const { data } = response\n  const { refs } = LinkHeader.parse(response.headers.link)\n  return { results: data, links: refs }\n})\n\nexport const fetchGotCharacterById = createAsyncThunk('@fetch/fetchGotCharacterById', async (id: string) => {\n  const response = await gotApi.getCharacterById(id)\n  const { data } = response\n  return data\n})\n","import React from 'react'\nimport { default as Progress } from 'react-loader-spinner'\n\nimport './loader.scss'\n\nexport const Loader = () => (\n  <div className=\"page-loader\">\n    <Progress type=\"ThreeDots\" color=\"#00BFFF\" height={100} width={100} timeout={3000} />\n  </div>\n)\n","import React from 'react'\nimport { Helmet } from 'react-helmet-async'\nimport cn from 'classnames'\n\nimport Loader from '../Loader'\n\ntype PageProps = {\n  title?: string\n  children: any\n  isLoading?: boolean\n  className?: string\n}\n\nexport const Page = ({ title, children, isLoading, className }: PageProps) => {\n  return (\n    <div className={cn('page', { [`${className}`]: className })}>\n      {isLoading ? (\n        <Loader />\n      ) : (\n        <>\n          <Helmet>\n            <title>{title}</title>\n          </Helmet>\n          {children}\n        </>\n      )}\n    </div>\n  )\n}\n","import React from 'react'\nimport { useTable, useSortBy, useFilters } from 'react-table'\nimport { TiArrowSortedDown, TiArrowSortedUp } from 'react-icons/ti'\n\nimport { isStringEmptyOrNull } from '../../utilities'\n\nimport './data-table.scss'\n\nconst namespace = 'data-table'\n\ninterface DataTableProps {\n  columns: any[]\n  data: any[]\n  initialState?: any\n}\n\nexport const DataTable = ({ columns, data, initialState }: DataTableProps) => {\n  const { getTableProps, getTableBodyProps, headerGroups, rows, prepareRow } = useTable(\n    {\n      columns,\n      data,\n      initialState,\n    },\n    useFilters,\n    useSortBy\n  )\n\n  return (\n    <div className={namespace}>\n      <table {...getTableProps()}>\n        <thead>\n          {headerGroups.map(headerGroup => (\n            <tr {...headerGroup.getHeaderGroupProps()}>\n              {headerGroup.headers.map((column: any) => (\n                <th {...column.getHeaderProps(column.getSortByToggleProps())}>\n                  {column.render('Header')}\n                  {column?.isSorted && (\n                    <span className=\"data-table__sort-icon\">\n                      {column?.isSortedDesc ? <TiArrowSortedDown /> : <TiArrowSortedUp />}\n                    </span>\n                  )}\n                  {column?.canFilter && column.filter && column.render('Filter')}\n                </th>\n              ))}\n            </tr>\n          ))}\n        </thead>\n        <tbody {...getTableBodyProps()}>\n          {rows.map((row, i) => {\n            prepareRow(row)\n            return (\n              <tr {...row.getRowProps()}>\n                {row.cells.map(cell => {\n                  return <td {...cell.getCellProps()}>{cell.render('Cell')}</td>\n                })}\n              </tr>\n            )\n          })}\n        </tbody>\n      </table>\n    </div>\n  )\n}\n\nexport const SelectColumnFilter = ({ column: { filterValue, setFilter, preFilteredRows, id } }: any) => {\n  const options = React.useMemo(() => {\n    const options: any = new Set()\n    preFilteredRows.forEach((row: any) => {\n      !isStringEmptyOrNull(row.values[id]) && options.add(row.values[id])\n    })\n    return [...options]\n  }, [id, preFilteredRows])\n\n  return (\n    <select\n      value={filterValue}\n      onChange={e => e.currentTarget.blur()}\n      onBlur={e => {\n        setFilter(e.target.value || undefined)\n      }}\n    >\n      <option value=\"\">All</option>\n      {options.map((option, i) => (\n        <option key={i} value={option}>\n          {option}\n        </option>\n      ))}\n    </select>\n  )\n}\n","import React, { useCallback } from 'react'\nimport cn from 'classnames'\n\nimport { isStringEmptyOrNull, historyPushQueryParams, getPageNumberFromUriParam } from '../../utilities'\n\nimport './pagination.scss'\n\ntype PaginationProps = {\n  currentPage: number\n  pageCount: number\n  pageSize: number\n  prevUri?: string\n  nextUri?: string\n  lastUri?: string\n}\nexport const Pagination = ({ pageCount, currentPage, pageSize, prevUri, nextUri, lastUri }: PaginationProps) => {\n  const handleGotoPageByNumber = useCallback((e: React.MouseEvent<HTMLButtonElement>, number: number) => {\n    e.preventDefault()\n    historyPushQueryParams('page', `${number}`)\n  }, [])\n\n  const handleChangePageSize = useCallback((e: React.FormEvent<HTMLSelectElement>) => {\n    e.preventDefault()\n    historyPushQueryParams({ page: '1', pageSize: `${e.currentTarget.value}` })\n  }, [])\n\n  return (\n    <div className=\"pagination\">\n      <button\n        className=\"pagination__button-prev\"\n        onClick={e => handleGotoPageByNumber(e, getPageNumberFromUriParam(prevUri))}\n        disabled={isStringEmptyOrNull(prevUri)}\n      >\n        Prev\n      </button>\n\n      {pageCount > 0 &&\n        Array.from(Array(pageCount).keys()).map(index => (\n          <button\n            key={`page-${index}`}\n            className={cn('pagination__button-page', { 'pagination__button-page--active': currentPage === index + 1 })}\n            onClick={e => handleGotoPageByNumber(e, index + 1)}\n            disabled={currentPage === index + 1}\n          >\n            {index + 1}\n          </button>\n        ))}\n\n      {!isStringEmptyOrNull(lastUri) && (\n        <button\n          className=\"pagination__button-last\"\n          onClick={e => handleGotoPageByNumber(e, getPageNumberFromUriParam(lastUri))}\n          disabled={currentPage === getPageNumberFromUriParam(lastUri)}\n        >\n          Last\n        </button>\n      )}\n\n      <button\n        className=\"pagination__button-next\"\n        onClick={e => handleGotoPageByNumber(e, getPageNumberFromUriParam(nextUri))}\n        disabled={isStringEmptyOrNull(nextUri)}\n      >\n        Next\n      </button>\n      <select onChange={e => e.currentTarget.blur()} onBlur={e => handleChangePageSize(e)} value={`${pageSize}`}>\n        <option value=\"5\">5</option>\n        <option value=\"10\">10</option>\n        <option value=\"20\">20</option>\n        <option value=\"30\">30</option>\n        <option value=\"50\">50</option>\n        <option value=\"100\">100</option>\n      </select>\n    </div>\n  )\n}\n","import React, { useState, useEffect, useMemo } from 'react'\nimport { useSelector, useDispatch } from 'react-redux'\nimport { Link } from 'wouter'\nimport { useSearchParam } from 'react-use'\n\nimport {\n  getBookCoverImageUrl,\n  BookCoverSize,\n  isArrayEmptyOrNull,\n  getPageNumberFromUriParam,\n  getUriByRel,\n  getLastPathnameFromUrl,\n} from '../../utilities'\nimport { RootState, AppDispatch } from '../../store'\nimport { fetchGotBooks } from '../../store/actions/services.actions'\n\nimport Page from '../../components/Page'\nimport DataTable from '../../components/DataTable'\nimport Pagination from '../../components/Pagination'\n\nexport const HomeContainer = () => {\n  const { isLoading } = useSelector((state: RootState) => state.layouts)\n  const { books } = useSelector((state: RootState) => state.services)\n  const dispatch: AppDispatch = useDispatch()\n  const pageQuery = useSearchParam('page')\n  const pageSizeQuery = useSearchParam('pageSize')\n\n  // Local State\n  const [state, setState] = useState({\n    currentPage: 0,\n    pageSize: 0,\n    pageCount: 1,\n    nextUri: '',\n    prevUri: '',\n    lastUri: '',\n  })\n\n  // Deeplinking query param change effect\n  // NOTE: Use querystring param as the source of truth to change page number\n  useEffect(() => {\n    setState(state => ({\n      ...state,\n      currentPage: pageQuery !== null ? +pageQuery : 1,\n      pageSize: pageSizeQuery !== null ? +pageSizeQuery : 5,\n    }))\n  }, [pageQuery, pageSizeQuery])\n\n  // Fetch New Books Data when Page Index or Page Size Changes\n  useEffect(() => {\n    if (state.currentPage && state.pageSize) {\n      const booksPromise = dispatch(fetchGotBooks({ page: state.currentPage, pageSize: state.pageSize }))\n      return () => {\n        booksPromise.abort()\n      }\n    }\n  }, [state.currentPage, state.pageSize, dispatch])\n\n  // Update pagination state when Respnse Header Link state is updated\n  useEffect(() => {\n    if (!isArrayEmptyOrNull(books.links)) {\n      const nextUri = getUriByRel(books.links, 'next')\n      const prevUri = getUriByRel(books.links, 'prev')\n      const lastUri = getUriByRel(books.links, 'last')\n      const pageCount = getPageNumberFromUriParam(lastUri)\n\n      setState(state => ({ ...state, nextUri, prevUri, lastUri, pageCount }))\n    }\n  }, [books.links])\n\n  // Table Columns Config\n  const columns = useMemo(\n    () => [\n      {\n        Header: '',\n        accessor: 'isbn',\n        Cell: (props: any) => {\n          const {\n            row: { original },\n          } = props\n          // Render Image\n          return (\n            <Link href={`/book/${getLastPathnameFromUrl(original.url)}`}>\n              <img\n                className=\"thumbnail\"\n                src={getBookCoverImageUrl(original.isbn, BookCoverSize.Medium)}\n                alt={original.name}\n              />\n            </Link>\n          )\n        },\n      },\n      {\n        Header: 'Title',\n        accessor: 'name',\n        Cell: (props: any) => {\n          const {\n            row: { original },\n          } = props\n          return <Link href={`/book/${getLastPathnameFromUrl(original.url)}`}>{original.name}</Link>\n        },\n      },\n      {\n        Header: 'Authors',\n        accessor: 'authors',\n      },\n      {\n        Header: 'Release Date',\n        accessor: 'released',\n      },\n      {\n        Header: 'Publisher',\n        accessor: 'publisher',\n      },\n      {\n        Header: 'Country',\n        accessor: 'country',\n      },\n      {\n        Header: 'Format',\n        accessor: 'mediaType',\n      },\n      {\n        Header: 'Page',\n        accessor: 'numberOfPages',\n        Cell: (props: any) => {\n          const { value } = props\n          // Render Image\n          return <span>{value} pages</span>\n        },\n      },\n    ],\n    []\n  )\n\n  return React.useMemo(\n    () => (\n      <Page title=\"GOT | Books\" className=\"books\" isLoading={isLoading}>\n        <DataTable\n          columns={columns}\n          data={books.results}\n          initialState={{\n            sortBy: [\n              {\n                id: 'name',\n                desc: false,\n              },\n            ],\n          }}\n        />\n\n        <Pagination\n          pageCount={state.pageCount}\n          currentPage={state.currentPage}\n          pageSize={state.pageSize}\n          prevUri={state.prevUri}\n          nextUri={state.nextUri}\n          lastUri={state.lastUri}\n        />\n      </Page>\n    ),\n    [books, columns, isLoading, state]\n  )\n}\n","import React, { useEffect } from 'react'\nimport { Params } from 'wouter'\nimport { useSelector, useDispatch } from 'react-redux'\n\nimport { IBook } from '../../models'\nimport { RootState, AppDispatch } from '../../store'\nimport { historyGoBack } from '../../utilities'\nimport { fetchGotBookById } from '../../store/actions/services.actions'\n\nimport Page from '../../components/Page'\n\ntype BookDetailsProps = {\n  params: Params\n}\n\nexport const BookDetailsContainer = ({ params }: BookDetailsProps) => {\n  const { id } = params\n  const { isLoading } = useSelector((state: RootState) => state.layouts)\n  const { book }: { book: IBook } = useSelector((state: RootState) => state.services)\n  const dispatch: AppDispatch = useDispatch()\n\n  // Fetch character details\n  useEffect(() => {\n    if (id) {\n      const promise = dispatch(fetchGotBookById(id))\n      return () => promise.abort()\n    }\n  }, [id, dispatch])\n\n  return React.useMemo(\n    () => (\n      <Page title={`GOT | Book: ${book.name ? book.name : 'N/A'}`} className=\"character-details\" isLoading={isLoading}>\n        <button onClick={e => historyGoBack()}>Back</button>\n        <pre>\n          <code>{JSON.stringify(book, null, '  ')}</code>\n        </pre>\n      </Page>\n    ),\n    [book, isLoading]\n  )\n}\n","import React, { useEffect, useState } from 'react'\nimport { Link } from 'wouter'\nimport axios from 'axios'\n\nimport { gotApi } from '../../services/gotApi.service'\n\nimport './link-crawl.scss'\n\ntype LinkCrawlProps = {\n  uri: string\n  href: string\n  labelByProp: string\n}\nexport const LinkCrawl = ({ uri, href, labelByProp }: LinkCrawlProps) => {\n  const [label, setLabel] = useState(null)\n\n  useEffect(() => {\n    const source = axios.CancelToken.source()\n    gotApi\n      .getDataByUri(uri, { cancelToken: source.token })\n      .then(({ data }) => {\n        setLabel(data[labelByProp] ?? '')\n      })\n      .catch(err => {\n        // Catch Error\n      })\n    return () => source.cancel()\n  }, [uri, labelByProp])\n\n  return React.useMemo(\n    () => (\n      <div className=\"link-crawl\">\n        <Link href={href}>{label}</Link>\n      </div>\n    ),\n    [href, label]\n  )\n}\n\ntype LinksListProps = {\n  links: string[]\n}\nexport const LinksList = ({ links }: LinksListProps) => {\n  return <div className=\"links-list\"></div>\n}\n","import { isArrayEmptyOrNull, getLastPathnameFromUrl, isStringEmptyOrNull } from '../utilities'\n\nimport { LinkCrawl } from '../modules/LinksList'\n\nexport const linkCrawl = (value: string, baseHref: string, labelByProp: string) => {\n  return !isStringEmptyOrNull(value) ? (\n    <LinkCrawl uri={value} href={`/${baseHref}/${getLastPathnameFromUrl(value)}`} labelByProp={labelByProp} />\n  ) : (\n    ''\n  )\n}\n\nexport const linksCrawl = (array: [], baseHref: string, labelByProp: string) => {\n  const uriArray = array\n  return !isArrayEmptyOrNull(uriArray)\n    ? uriArray.map((uri: string, index: number) => (\n        <LinkCrawl\n          key={`${uri}`}\n          uri={uri}\n          href={`/${baseHref}/${getLastPathnameFromUrl(uri)}`}\n          labelByProp={labelByProp}\n        />\n      ))\n    : ''\n}\n","import React, { useState, useEffect, useMemo } from 'react'\nimport { useSelector, useDispatch } from 'react-redux'\nimport { Link } from 'wouter'\nimport { useSearchParam } from 'react-use'\n\nimport { isArrayEmptyOrNull, getPageNumberFromUriParam, getUriByRel, getLastPathnameFromUrl } from '../../utilities'\nimport { RootState, AppDispatch } from '../../store'\nimport { fetchGotHouses } from '../../store/actions/services.actions'\nimport { linkCrawl, linksCrawl } from '../../helpers/LinkCrawl'\n\nimport Page from '../../components/Page'\nimport DataTable from '../../components/DataTable'\nimport Pagination from '../../components/Pagination'\n\nexport const HousesContainer = () => {\n  const { isLoading } = useSelector((state: RootState) => state.layouts)\n  const { houses } = useSelector((state: RootState) => state.services)\n  const dispatch: AppDispatch = useDispatch()\n  const pageQuery = useSearchParam('page')\n  const pageSizeQuery = useSearchParam('pageSize')\n\n  const [state, setState] = useState({\n    currentPage: 0,\n    pageSize: 0,\n    pageCount: 1,\n    nextUri: '',\n    prevUri: '',\n    lastUri: '',\n  })\n\n  // Deeplinking query param change effect\n  // NOTE: Use querystring param as the source of truth to change page number\n  useEffect(() => {\n    setState(state => ({\n      ...state,\n      currentPage: pageQuery !== null ? +pageQuery : 1,\n      pageSize: pageSizeQuery !== null ? +pageSizeQuery : 20,\n    }))\n  }, [pageQuery, pageSizeQuery])\n\n  // Fetch New Books Data when Page Index or Page Size Changes\n  useEffect(() => {\n    if (state.currentPage && state.pageSize) {\n      const housesPromise = dispatch(fetchGotHouses({ page: state.currentPage, pageSize: state.pageSize }))\n      return () => {\n        housesPromise.abort()\n      }\n    }\n  }, [state.currentPage, state.pageSize, dispatch])\n\n  // Update pagination state when Respnse Header Link state is updated\n  useEffect(() => {\n    if (!isArrayEmptyOrNull(houses.links)) {\n      const nextUri = getUriByRel(houses.links, 'next')\n      const prevUri = getUriByRel(houses.links, 'prev')\n      const lastUri = getUriByRel(houses.links, 'last')\n      const pageCount = getPageNumberFromUriParam(lastUri)\n\n      setState(state => ({ ...state, nextUri, prevUri, lastUri, pageCount }))\n    }\n  }, [houses.links])\n\n  // Table Columns Config\n  const columns = useMemo(\n    () => [\n      {\n        Header: 'Name',\n        accessor: 'name',\n        Cell: (props: any) => {\n          const {\n            row: { original },\n          } = props\n          const houseId = getLastPathnameFromUrl(original.url)\n          return <Link href={`/house/${houseId}`}>{original.name}</Link>\n        },\n      },\n      {\n        Header: 'Region',\n        accessor: 'region',\n      },\n      {\n        Header: 'Overlord',\n        accessor: 'overlord',\n        Cell: (props: any) => linkCrawl(props.value, 'character', 'name'),\n      },\n      {\n        Header: 'Current Lord',\n        accessor: 'currentLord',\n        Cell: (props: any) => linkCrawl(props.value, 'character', 'name'),\n      },\n      {\n        Header: 'Heir',\n        accessor: 'heir',\n        Cell: (props: any) => linkCrawl(props.value, 'character', 'name'),\n      },\n      {\n        Header: 'Details',\n        accessor: 'titles', // Array\n        Cell: (props: any) => {\n          const {\n            row: { original },\n          } = props\n          return (\n            <>\n              <div className=\"founded\">\n                <h3>Founded</h3>\n                {original.founded ?? 'N/A'}\n              </div>\n              <div className=\"founder\">\n                <h3>Founder</h3>\n                {original.founder ? linkCrawl(original.founder, 'character', 'name') : 'N/A'}\n              </div>\n              <div className=\"titles\">\n                <h3>Titles</h3>\n                {!isArrayEmptyOrNull(original.titles)\n                  ? original.titles.map((title: string) => <p key={title}>{title}</p>)\n                  : 'N/A'}\n              </div>\n              <div className=\"coat-of-arms\">\n                <h3>Coat of Arms</h3>\n                {original.coatOfArms}\n              </div>\n              <div className=\"words\">\n                <h3>Words</h3>\n                {original.words}\n              </div>\n              <div className=\"sworn-members\">\n                <h3>Sworn Members</h3>\n                {original.swornMembers ? linksCrawl(original.swornMembers, 'character', 'name') : 'N/A'}\n              </div>\n            </>\n          )\n        },\n      },\n    ],\n    []\n  )\n\n  return React.useMemo(\n    () => (\n      <Page title=\"GOT | Houses\" className=\"houses\" isLoading={isLoading}>\n        <DataTable columns={columns} data={houses.results} />\n        <Pagination\n          pageCount={state.pageCount}\n          currentPage={state.currentPage}\n          pageSize={state.pageSize}\n          prevUri={state.prevUri}\n          nextUri={state.nextUri}\n          lastUri={state.lastUri}\n        />\n      </Page>\n    ),\n    [houses, columns, isLoading, state]\n  )\n}\n","import React, { useEffect } from 'react'\nimport { Params } from 'wouter'\nimport { useSelector, useDispatch } from 'react-redux'\n\nimport { IHouse } from '../../models'\nimport { RootState, AppDispatch } from '../../store'\nimport { historyGoBack } from '../../utilities'\nimport { fetchGotHouseById } from '../../store/actions/services.actions'\n\nimport Page from '../../components/Page'\n\ntype HouseDetailsProps = {\n  params: Params\n}\n\nexport const HouseDetailsContainer = ({ params }: HouseDetailsProps) => {\n  const { id } = params\n  const { isLoading } = useSelector((state: RootState) => state.layouts)\n  const { house }: { house: IHouse } = useSelector((state: RootState) => state.services)\n  const dispatch: AppDispatch = useDispatch()\n\n  // Fetch character details\n  useEffect(() => {\n    if (id) {\n      const promise = dispatch(fetchGotHouseById(id))\n      return () => promise.abort()\n    }\n  }, [id, dispatch])\n\n  return React.useMemo(\n    () => (\n      <Page title={`GOT | House: ${house?.name}`} className=\"house-details\" isLoading={isLoading}>\n        <button onClick={e => historyGoBack()}>Back</button>\n        <pre>\n          <code>{JSON.stringify(house, null, '  ')}</code>\n        </pre>\n      </Page>\n    ),\n    [house, isLoading]\n  )\n}\n","import React, { useState, useEffect, useMemo } from 'react'\nimport { useSelector, useDispatch } from 'react-redux'\nimport { Link } from 'wouter'\nimport { useSearchParam } from 'react-use'\n\nimport {\n  isArrayEmptyOrNull,\n  getPageNumberFromUriParam,\n  getUriByRel,\n  getLastPathnameFromUrl,\n  isStringEmptyOrNull,\n} from '../../utilities'\nimport { RootState, AppDispatch } from '../../store'\nimport { fetchGotCharacters } from '../../store/actions/services.actions'\nimport { linkCrawl, linksCrawl } from '../../helpers/LinkCrawl'\n\nimport Page from '../../components/Page'\nimport DataTable, { SelectColumnFilter } from '../../components/DataTable'\nimport Pagination from '../../components/Pagination'\n\nexport const CharactersContainer = () => {\n  const { isLoading } = useSelector((state: RootState) => state.layouts)\n  const { characters } = useSelector((state: RootState) => state.services)\n  const dispatch: AppDispatch = useDispatch()\n  const pageQuery = useSearchParam('page')\n  const pageSizeQuery = useSearchParam('pageSize')\n\n  const [state, setState] = useState({\n    currentPage: 0,\n    pageSize: 0,\n    pageCount: 1,\n    nextUri: '',\n    prevUri: '',\n    lastUri: '',\n  })\n\n  // Deeplinking query param change effect\n  // NOTE: Use querystring param as the source of truth to change page number\n  useEffect(() => {\n    setState(state => ({\n      ...state,\n      currentPage: pageQuery !== null ? +pageQuery : 1,\n      pageSize: pageSizeQuery !== null ? +pageSizeQuery : 30,\n    }))\n  }, [pageQuery, pageSizeQuery])\n\n  // Fetch New Books Data when Page Index or Page Size Changes\n  useEffect(() => {\n    if (state.currentPage && state.pageSize) {\n      const housesPromise = dispatch(fetchGotCharacters({ page: state.currentPage, pageSize: state.pageSize }))\n      return () => {\n        housesPromise.abort()\n      }\n    }\n  }, [state.currentPage, state.pageSize, dispatch])\n\n  // Update pagination state when Respnse Header Link state is updated\n  useEffect(() => {\n    if (!isArrayEmptyOrNull(characters.links)) {\n      const nextUri = getUriByRel(characters.links, 'next')\n      const prevUri = getUriByRel(characters.links, 'prev')\n      const lastUri = getUriByRel(characters.links, 'last')\n      const pageCount = getPageNumberFromUriParam(lastUri)\n\n      setState(state => ({ ...state, nextUri, prevUri, lastUri, pageCount }))\n    }\n  }, [characters.links])\n\n  // Table Columns Config\n  const columns = useMemo(\n    () => [\n      {\n        Header: 'Name',\n        accessor: 'name',\n        Cell: (props: any) => {\n          const {\n            row: { original },\n          } = props\n          const characterId = getLastPathnameFromUrl(original.url)\n          return (\n            <>\n              <Link href={`/character/${characterId}`}>\n                {isStringEmptyOrNull(original.name) ? 'N/A' : original.name}\n              </Link>\n              {!isArrayEmptyOrNull(original.aliases) && (\n                <div className=\"aliases\">\n                  <h5>Aliases:</h5>\n                  {original.aliases.map((alias: string) => (\n                    <p key={alias}>{alias}</p>\n                  ))}\n                </div>\n              )}\n            </>\n          )\n        },\n      },\n      {\n        Header: 'Gender',\n        accessor: 'gender',\n        Filter: SelectColumnFilter,\n        disableSortBy: true,\n        filter: 'includes',\n      },\n      {\n        Header: 'Culture',\n        accessor: 'culture',\n        Filter: SelectColumnFilter,\n        disableSortBy: true,\n        filter: 'includes',\n      },\n      {\n        Header: 'Family',\n        accessor: 'father',\n        Cell: (props: any) => {\n          const {\n            row: { original },\n          } = props\n          return (\n            <div>\n              {!isStringEmptyOrNull(original.father) && (\n                <span>Father {linkCrawl(original.father, 'character', 'name')}</span>\n              )}\n              {!isStringEmptyOrNull(original.mother) && (\n                <span>Mother {linkCrawl(original.mother, 'character', 'name')}</span>\n              )}\n              {!isStringEmptyOrNull(original.spouse) && (\n                <span>Spouse {linkCrawl(original.spouse, 'character', 'name')}</span>\n              )}\n            </div>\n          )\n        },\n      },\n      {\n        Header: 'Allegiances',\n        accessor: 'allegiances', // Array\n        Cell: (props: any) => linksCrawl(props.value, 'house', 'name'),\n      },\n      {\n        Header: 'Books',\n        accessor: 'books', // Array\n        Cell: (props: any) => linksCrawl(props.value, 'book', 'name'),\n        Filter: SelectBookFilter,\n        filter: 'includes',\n        disableSortBy: true,\n      },\n      {\n        Header: 'POV Books',\n        accessor: 'povBooks', // Array\n        Cell: (props: any) => linksCrawl(props.value, 'book', 'name'),\n      },\n      // {\n      //   Header: 'TV Series',\n      //   accessor: 'tvSeries', // Array\n      // },\n      // {\n      //   Header: 'Played By',\n      //   accessor: 'playedBy', // Array\n      // },\n    ],\n    []\n  )\n\n  return useMemo(\n    () => (\n      <Page title=\"GOT | Characters\" className=\"characters\" isLoading={isLoading}>\n        <DataTable columns={columns} data={characters.results} />\n        <Pagination\n          pageCount={state.pageCount}\n          currentPage={state.currentPage}\n          pageSize={state.pageSize}\n          prevUri={state.prevUri}\n          nextUri={state.nextUri}\n          lastUri={state.lastUri}\n        />\n      </Page>\n    ),\n    [characters, columns, state, isLoading]\n  )\n}\n\nexport const SelectBookFilter = ({ column: { filterValue, setFilter, preFilteredRows, id } }: any) => {\n  const options = React.useMemo(() => {\n    const options: any = new Set()\n    preFilteredRows.forEach((row: any) => {\n      !isArrayEmptyOrNull(row.values[id]) &&\n        row.values[id].forEach((bookUri: string) => {\n          options.add(bookUri)\n        })\n    })\n    return [...options]\n  }, [id, preFilteredRows])\n\n  return (\n    <select\n      value={filterValue}\n      onChange={e => e.currentTarget.blur()}\n      onBlur={e => {\n        setFilter(e.target.value || undefined)\n      }}\n    >\n      <option value=\"\">All</option>\n      {options.map((option, i) => (\n        <option key={i} value={option}>\n          {`Book ${getLastPathnameFromUrl(option)}`}\n        </option>\n      ))}\n    </select>\n  )\n}\n","import React, { useEffect } from 'react'\nimport { Params } from 'wouter'\nimport { useSelector, useDispatch } from 'react-redux'\n\nimport { ICharacter } from '../../models'\nimport { RootState, AppDispatch } from '../../store'\nimport { historyGoBack } from '../../utilities'\nimport { fetchGotCharacterById } from '../../store/actions/services.actions'\n\nimport Page from '../../components/Page'\n\ntype CharacterDetailsProps = {\n  params: Params\n}\n\nexport const CharacterDetailsContainer = ({ params }: CharacterDetailsProps) => {\n  const { id } = params\n  const { isLoading } = useSelector((state: RootState) => state.layouts)\n  const { character }: { character: ICharacter } = useSelector((state: RootState) => state.services)\n  const dispatch: AppDispatch = useDispatch()\n\n  // Fetch character details\n  useEffect(() => {\n    if (id) {\n      const promise = dispatch(fetchGotCharacterById(id))\n      return () => promise.abort()\n    }\n  }, [id, dispatch])\n\n  return React.useMemo(\n    () => (\n      <Page\n        title={`GOT | Character: ${character.name ? character.name : 'N/A'}`}\n        className=\"character-details\"\n        isLoading={isLoading}\n      >\n        <button onClick={e => historyGoBack()}>Back</button>\n        <pre>\n          <code>{JSON.stringify(character, null, '  ')}</code>\n        </pre>\n      </Page>\n    ),\n    [character, isLoading]\n  )\n}\n","import React from 'react'\nimport { Router, Route } from 'wouter'\n\nimport { HomeContainer } from './containers/HomeContainer'\nimport { BookDetailsContainer } from './containers/BookDetailsContainer'\nimport { HousesContainer } from './containers/HousesContainer'\nimport { HouseDetailsContainer } from './containers/HouseDetailsContainer'\nimport { CharactersContainer } from './containers/CharactersContainer'\nimport { CharacterDetailsContainer } from './containers/CharacterDetailsContainer'\n\nconst Routes = () => {\n  return (\n    <Router base=\"/got-ice-fire\">\n      <Route path=\"/\" component={HomeContainer} />\n      <Route path=\"/book/:id\" component={BookDetailsContainer} />\n      <Route path=\"/houses\" component={HousesContainer} />\n      <Route path=\"/house/:id\" component={HouseDetailsContainer} />\n      <Route path=\"/characters\" component={CharactersContainer} />\n      <Route path=\"/character/:id\" component={CharacterDetailsContainer} />\n    </Router>\n  )\n}\n\nexport default Routes\n","import React, { useRef, useState, useEffect } from 'react'\nimport Headroom from 'headroom.js'\nimport cn from 'classnames'\n\nimport { PrimaryHeader } from './modules'\nimport Routes from './Routes'\n\nconst App = () => {\n  const headerGroupRef = useRef(null)\n  const [headerPinned, setHeaderPinned] = useState(false)\n\n  const handlePinHeader = () => {\n    setHeaderPinned(true)\n  }\n\n  const handleUnPinHeader = () => {\n    setHeaderPinned(false)\n  }\n\n  // Start Headroom (Sticky Header)\n  useEffect(() => {\n    const { current }: { current: string | null } = headerGroupRef\n    if (current !== null) {\n      const headroom = new Headroom(current, {\n        tolerance: {\n          up: 5,\n          down: 5,\n        },\n        onPin: handlePinHeader,\n        onUnpin: handleUnPinHeader,\n      })\n      headroom.init()\n\n      return () => {\n        headroom.destroy()\n      }\n    }\n  }, [])\n\n  return (\n    <div\n      className={cn('main-container', {\n        'main-container--header-pinned': headerPinned,\n        'main-container--header-unpinned': !headerPinned,\n      })}\n    >\n      <PrimaryHeader ref={headerGroupRef} />\n      <main>\n        <Routes />\n      </main>\n      <footer className=\"footer\">\n        <div className=\"footer__container\">\n          <p className=\"footer__copyright\">License Copyright: Unknown. </p>\n        </div>\n      </footer>\n    </div>\n  )\n}\n\nexport default App\n","import { ReportHandler } from 'web-vitals'\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry)\n      getFID(onPerfEntry)\n      getFCP(onPerfEntry)\n      getLCP(onPerfEntry)\n      getTTFB(onPerfEntry)\n    })\n  }\n}\n\nexport default reportWebVitals\n","import { createSlice } from '@reduxjs/toolkit'\n\nimport {\n  fetchGotBooks,\n  fetchGotBookById,\n  fetchGotBooksByUri,\n  fetchGotHouses,\n  fetchGotHouseById,\n  fetchGotCharacters,\n  fetchGotCharacterById,\n} from '../actions/services.actions'\n\ntype State = {\n  breakpoint: string | null\n  isLoading: boolean\n}\n\nconst setLoadingReducer = (state: State, isLoading: boolean) => {\n  state.isLoading = isLoading\n}\n\nexport const layoutsSlice = createSlice({\n  name: 'layouts',\n  initialState: {\n    breakpoint: null,\n    isLoading: false,\n  },\n  reducers: {\n    breakpointChange: (state, action) => {\n      state.breakpoint = action.payload\n    },\n  },\n  // Thunks\n  extraReducers: {\n    [`${fetchGotBooks.pending}`]: state => setLoadingReducer(state, true),\n    [`${fetchGotBookById.pending}`]: state => setLoadingReducer(state, true),\n    [`${fetchGotBooksByUri.pending}`]: state => setLoadingReducer(state, true),\n    [`${fetchGotHouses.pending}`]: state => setLoadingReducer(state, true),\n    [`${fetchGotHouseById.pending}`]: state => setLoadingReducer(state, true),\n    [`${fetchGotCharacters.pending}`]: state => setLoadingReducer(state, true),\n    [`${fetchGotCharacterById.pending}`]: state => setLoadingReducer(state, true),\n\n    [`${fetchGotBooks.fulfilled}`]: state => setLoadingReducer(state, false),\n    [`${fetchGotBookById.fulfilled}`]: state => setLoadingReducer(state, false),\n    [`${fetchGotBooksByUri.fulfilled}`]: state => setLoadingReducer(state, false),\n    [`${fetchGotHouses.fulfilled}`]: state => setLoadingReducer(state, false),\n    [`${fetchGotHouseById.fulfilled}`]: state => setLoadingReducer(state, false),\n    [`${fetchGotCharacters.fulfilled}`]: state => setLoadingReducer(state, false),\n    [`${fetchGotCharacterById.fulfilled}`]: state => setLoadingReducer(state, false),\n\n    [`${fetchGotBooks.rejected}`]: state => setLoadingReducer(state, false),\n    [`${fetchGotBookById.rejected}`]: state => setLoadingReducer(state, false),\n    [`${fetchGotBooksByUri.rejected}`]: state => setLoadingReducer(state, false),\n    [`${fetchGotHouses.rejected}`]: state => setLoadingReducer(state, false),\n    [`${fetchGotHouseById.rejected}`]: state => setLoadingReducer(state, false),\n    [`${fetchGotCharacters.rejected}`]: state => setLoadingReducer(state, false),\n    [`${fetchGotCharacterById.rejected}`]: state => setLoadingReducer(state, false),\n  },\n})\n\nexport default layoutsSlice.reducer\n","import { createSlice } from '@reduxjs/toolkit'\n\nimport { IBook, IHouse, ICharacter } from '../../models'\nimport {\n  fetchGotBooks,\n  fetchGotBookById,\n  fetchGotBooksByUri,\n  fetchGotHouses,\n  fetchGotHouseById,\n  fetchGotCharacters,\n  fetchGotCharacterById,\n} from '../actions/services.actions'\n\nexport const servicesSlice = createSlice({\n  name: 'services',\n  initialState: {\n    books: {\n      results: [] as IBook[],\n      links: [],\n    },\n    houses: {\n      results: [] as IHouse[],\n      links: [],\n    },\n    characters: {\n      results: [] as ICharacter[],\n      links: [],\n    },\n    book: {} as IBook,\n    house: {} as IHouse,\n    character: {} as ICharacter,\n  },\n  reducers: {},\n  // Thunks\n  extraReducers: {\n    [`${fetchGotBooks.fulfilled}`]: (state, { payload }) => {\n      state.books.results = payload.results\n      state.books.links = payload.links\n    },\n    [`${fetchGotBookById.fulfilled}`]: (state, { payload }) => {\n      state.book = payload\n    },\n    [`${fetchGotBooksByUri.fulfilled}`]: (state, { payload }) => {\n      state.books.results = payload.results\n      state.books.links = payload.links\n    },\n    [`${fetchGotHouses.fulfilled}`]: (state, { payload }) => {\n      state.houses.results = payload.results\n      state.houses.links = payload.links\n    },\n    [`${fetchGotHouseById.fulfilled}`]: (state, { payload }) => {\n      state.house = payload\n    },\n    [`${fetchGotCharacters.fulfilled}`]: (state, { payload }) => {\n      state.characters.results = payload.results\n      state.characters.links = payload.links\n    },\n    [`${fetchGotCharacterById.fulfilled}`]: (state, { payload }) => {\n      state.character = payload\n    },\n  },\n})\n\nexport default servicesSlice.reducer\n","import { configureStore, Action } from '@reduxjs/toolkit'\nimport { combineReducers } from 'redux'\nimport { ThunkAction } from 'redux-thunk'\n\nimport layouts from './reducers/layouts.reducer'\nimport services from './reducers/services.reducer'\n\nconst rootReducer = combineReducers({\n  layouts,\n  services,\n})\n\nconst store = configureStore({\n  reducer: rootReducer,\n})\n\nexport type RootState = ReturnType<typeof rootReducer>\nexport type AppDispatch = typeof store.dispatch\nexport type AppThunk = ThunkAction<void, RootState, null, Action<string>>\n\nexport default store\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport { Provider } from 'react-redux'\nimport { HelmetProvider } from 'react-helmet-async'\n\nimport 'normalize.css'\nimport 'react-loader-spinner/dist/loader/css/react-spinner-loader.css'\nimport './index.scss'\nimport App from './App'\nimport reportWebVitals from './reportWebVitals'\n\nimport store from './store'\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <HelmetProvider>\n        <App />\n      </HelmetProvider>\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n)\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals()\n"],"sourceRoot":""}