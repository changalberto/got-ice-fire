{"version":3,"sources":["main.7283722d.chunk.css","webpack://src/styles/core/_mixins.scss","webpack://src/index.scss","webpack://src/styles/core/_config.scss","webpack://src/styles/core/_fonts.scss","webpack://src/styles/core/_grid.scss","webpack://src/styles/core/_spacing.scss","webpack://node_modules/include-media/dist/_include-media.scss","webpack://src/styles/core/_colors.scss","webpack://src/styles/core/_typography.scss","webpack://src/modules/PrimaryHeader/primary-header.scss","webpack://src/components/Loader/loader.scss","webpack://src/components/DataTable/data-table.scss","webpack://src/components/Pagination/pagination.scss","webpack://src/modules/LinksList/link-crawl.scss","webpack://src/containers/BookDetailsContainer/book-details.scss","webpack://src/containers/HouseDetailsContainer/house-details.scss","webpack://src/styles/core/_breakpoints.scss","webpack://src/containers/CharacterDetailsContainer/character-details.scss"],"names":[],"mappings":"AAgBA,uGAAuG,CACvG,iGAAiG,CCb/F,KACE,qBAAsB,CACvB,iBAKC,kBAAmB,CACpB,OAmBC,YAAa,CACd,eAGC,iBAAkB,CC5BtB,UAEE,QAAS,CACT,uBCUY,CDJb,yBATD,UAOI,uBCQW,CDNd,CAED,KACE,kCEbwC,CFcxC,kCAAmC,CACnC,iCAAkC,CACnC,KGlBC,UAAW,CACX,gBFKiB,CEJjB,aAAc,CACd,YAJ8C,CAK9C,qBHiBqC,CGhBrC,iBAAkB,CHmBlB,0BAAsB,CACtB,sCAAuC,CAUvC,mBIhCW,CJiCZ,yBAhBD,KGZI,iBFAY,CECZ,kBFDY,CD4Bf,CKygBG,+CLzhBJ,KGPI,iBFJY,CEKZ,kBFLY,CD2Bf,CKygBG,yBLzhBJ,KGFI,iBFRa,CESb,kBFTa,CD0BhB,CKygBG,yBLzhBJ,KAWI,0BAAsB,CACtB,sCAAuC,CAI1C,CAED,KACE,yEAA+E,CAChF,WGxCC,UAAW,CACX,gBFKiB,CEJjB,aAAc,CACd,YAJ8C,CAK9C,kBAL8B,CAM9B,iBAAkB,CHuCnB,yBAFD,WGlCI,iBFAY,CECZ,kBFDY,CDoCf,CKigBG,+CLngBJ,WG7BI,iBFJY,CEKZ,kBFLY,CDmCf,CKigBG,yBLngBJ,WGxBI,iBFRa,CESb,kBFTa,CDkChB,CAED,MACE,aMjDkB,CNkDnB,eAGC,YIlDU,CJmDX,QAGC,wBMtDc,CNuDd,cAA0B,CAC1B,YAAa,CAEb,mBG3DA,UAAW,CACX,gBFKiB,CEJjB,aAAc,CACd,YAJ8C,CAK9C,kBHwDoC,CGvDpC,iBAAkB,CHwDjB,yBAFD,mBGnDE,iBFAY,CECZ,kBFDY,CDqDb,CKgfC,+CLlfF,mBG9CE,iBFJY,CEKZ,kBFLY,CDoDb,CKgfC,yBLlfF,mBGzCE,iBFRa,CESb,kBFTa,CDmDd,CAED,mBOmCA,gCLjGoC,CKkGpC,cArCe,CAuCf,gBAAiB,CPpChB,yBAFD,mBO0CI,cAhCW,CPRd,CDlDD,gBSdA,UAAW,CACX,wBFDc,CEEd,YAAa,CACb,kBAAmB,CAGnB,2BLPA,UAAW,CACX,gBFKiB,CEJjB,aAAc,CACd,YAJ8C,CAK9C,kBKIoC,CLHpC,iBAAkB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","file":"main.7283722d.chunk.css","sourcesContent":["@import url(https://fonts.googleapis.com/css2?family=Poppins:wght@300;400;500;600;700;800&display=swap);\n@import url(https://fonts.googleapis.com/css2?family=Open+Sans:wght@300;400;600;700&display=swap);\n@import url(https://fonts.googleapis.com/css2?family=Poppins:wght@300;400;500;600;700;800&display=swap);\n@import url(https://fonts.googleapis.com/css2?family=Open+Sans:wght@300;400;600;700&display=swap);\n@import url(https://fonts.googleapis.com/css2?family=Poppins:wght@300;400;500;600;700;800&display=swap);\n@import url(https://fonts.googleapis.com/css2?family=Open+Sans:wght@300;400;600;700&display=swap);\n@import url(https://fonts.googleapis.com/css2?family=Poppins:wght@300;400;500;600;700;800&display=swap);\n@import url(https://fonts.googleapis.com/css2?family=Open+Sans:wght@300;400;600;700&display=swap);\n@import url(https://fonts.googleapis.com/css2?family=Poppins:wght@300;400;500;600;700;800&display=swap);\n@import url(https://fonts.googleapis.com/css2?family=Open+Sans:wght@300;400;600;700&display=swap);\n@import url(https://fonts.googleapis.com/css2?family=Poppins:wght@300;400;500;600;700;800&display=swap);\n@import url(https://fonts.googleapis.com/css2?family=Open+Sans:wght@300;400;600;700&display=swap);\n@import url(https://fonts.googleapis.com/css2?family=Poppins:wght@300;400;500;600;700;800&display=swap);\n@import url(https://fonts.googleapis.com/css2?family=Open+Sans:wght@300;400;600;700&display=swap);\n@import url(https://fonts.googleapis.com/css2?family=Poppins:wght@300;400;500;600;700;800&display=swap);\n@import url(https://fonts.googleapis.com/css2?family=Open+Sans:wght@300;400;600;700&display=swap);\n@import url(https://fonts.googleapis.com/css2?family=Poppins:wght@300;400;500;600;700;800&display=swap);\n@import url(https://fonts.googleapis.com/css2?family=Open+Sans:wght@300;400;600;700&display=swap);\nbody:before{content:\"mobile\";display:none}@media (min-width: 768px){body:before{content:\"tablet\"}}@media (min-width: 1024px){body:before{content:\"desktop\"}}html{box-sizing:border-box}*,*:before,*:after{box-sizing:inherit}*:focus{outline:none}*:focus-visible{outline:3px solid}html,body{margin:0;scroll-padding-top:50px}@media (min-width: 769px){html,body{scroll-padding-top:60px}}body{font-family:\"Open Sans\",sans-serif;-webkit-font-smoothing:antialiased;-moz-osx-font-smoothing:grayscale}main{width:100%;max-width:1440px;margin:0 auto;display:flex;flex-direction:column;position:relative;--header-group-height: 50px;padding-top:var(--header-group-height);padding-bottom:30px}@media (max-width: 428px){main{padding-left:18px;padding-right:18px}}@media (min-width: 429px) and (max-width: 768px){main{padding-left:20px;padding-right:20px}}@media (min-width: 769px){main{padding-left:20px;padding-right:20px}}@media (min-width: 768px){main{--header-group-height: 60px;padding-top:var(--header-group-height)}}code{font-family:source-code-pro, Menlo, Monaco, Consolas, 'Courier New', monospace}.container{width:100%;max-width:1440px;margin:0 auto;display:flex;flex-direction:row;position:relative}@media (max-width: 428px){.container{padding-left:18px;padding-right:18px}}@media (min-width: 429px) and (max-width: 768px){.container{padding-left:20px;padding-right:20px}}@media (min-width: 769px){.container{padding-left:20px;padding-right:20px}}.link{color:#24b0f5}.inset-padding{padding:20px}.footer{background-color:#ededed;padding:15px 0;display:flex}.footer__container{width:100%;max-width:1440px;margin:0 auto;display:flex;flex-direction:row;position:relative}@media (max-width: 428px){.footer__container{padding-left:18px;padding-right:18px}}@media (min-width: 429px) and (max-width: 768px){.footer__container{padding-left:20px;padding-right:20px}}@media (min-width: 769px){.footer__container{padding-left:20px;padding-right:20px}}.footer__copyright{font-family:\"Poppins\",sans-serif;font-size:12px;line-height:1.15}@media (min-width: 769px){.footer__copyright{font-size:12px}}\n\nbody:before{content:\"mobile\";display:none}@media (min-width: 768px){body:before{content:\"tablet\"}}@media (min-width: 1024px){body:before{content:\"desktop\"}}.primary-header{width:100%;background-color:#ededed;display:flex;align-items:center}.primary-header__container{width:100%;max-width:1440px;margin:0 auto;display:flex;flex-direction:row;position:relative}@media (max-width: 428px){.primary-header__container{padding-left:18px;padding-right:18px}}@media (min-width: 429px) and (max-width: 768px){.primary-header__container{padding-left:20px;padding-right:20px}}@media (min-width: 769px){.primary-header__container{padding-left:20px;padding-right:20px}}.primary-header__title{font-family:\"Poppins\",sans-serif;font-size:21px;font-weight:700;line-height:1.1;margin-right:30px}@media (min-width: 769px){.primary-header__title{font-size:24px;font-weight:700}}.primary-header__title a{color:#23282f;text-decoration:none}.primary-header__nav{font-family:\"Poppins\",sans-serif;font-size:14px;font-weight:600;line-height:1.15;color:#23282f;display:inline-flex;align-items:center}@media (min-width: 769px){.primary-header__nav{font-size:14px;font-weight:600}}.primary-header__nav__item{margin:0 15px;display:inline-flex;color:#23282f}.primary-header__nav__item--active{color:#24b0f5}.headroom{width:100%;position:fixed;top:0;will-change:transform;transition:transform 200ms ease-in-out;z-index:10}.headroom--pinned{transform:translateY(0%)}.headroom--unpinned{transform:translateY(calc(-50px))}@media (min-width: 429px){.headroom--pinned{transform:translateY(0%)}.headroom--unpinned{transform:translateY(calc(-60px))}}\n\nbody:before{content:\"mobile\";display:none}@media (min-width: 768px){body:before{content:\"tablet\"}}@media (min-width: 1024px){body:before{content:\"desktop\"}}.page-loader{width:100%;height:100%;min-height:50vh;display:flex;position:relative;justify-content:center;align-items:center}\n\nbody:before{content:\"mobile\";display:none}@media (min-width: 768px){body:before{content:\"tablet\"}}@media (min-width: 1024px){body:before{content:\"desktop\"}}.data-table{width:100%;padding:20px 0;text-align:left}.data-table .thumbnail{width:80px;display:block}.data-table table{width:100%;border-collapse:separate}.data-table th{padding:15px 10px;border-bottom:1px solid #ededed;vertical-align:middle}.data-table th .header-label{display:inline-flex;margin-right:10px}.data-table td{padding:15px 10px;vertical-align:top;border-bottom:1px solid #ededed}.data-table .details-column-content{max-width:450px;max-height:200px;overflow:hidden;overflow-y:scroll}.data-table .details-column-content .link-crawl{display:block}\n\nbody:before{content:\"mobile\";display:none}@media (min-width: 768px){body:before{content:\"tablet\"}}@media (min-width: 1024px){body:before{content:\"desktop\"}}.pagination{width:100%;display:flex;flex-wrap:wrap;position:relative;justify-content:center;align-items:center}.pagination button{font-family:\"Poppins\",sans-serif;font-size:14px;font-weight:400;line-height:1.15;height:30px;margin:5px;padding:5px;background-color:#fff;display:inline-flex;border:1px solid #ededed;align-items:center;justify-content:center;cursor:pointer}@media (min-width: 769px){.pagination button{font-size:14px;font-weight:400}}.pagination__button-page{width:30px}.pagination__button-page--active{color:#24b0f5}.pagination__button-prev,.pagination__button-next,.pagination__button-last{padding:5px 15px !important}.pagination select{font-family:\"Poppins\",sans-serif;font-size:14px;font-weight:400;line-height:1.15;height:30px;margin:0 5px;padding:5px;background-color:#fff;display:inline-flex;border:1px solid #ededed;align-items:center;justify-content:center}@media (min-width: 769px){.pagination select{font-size:14px;font-weight:400}}\n\nbody:before{content:\"mobile\";display:none}@media (min-width: 768px){body:before{content:\"tablet\"}}@media (min-width: 1024px){body:before{content:\"desktop\"}}.link-crawl{margin-bottom:15px}\n\nbody:before{content:\"mobile\";display:none}@media (min-width: 768px){body:before{content:\"tablet\"}}@media (min-width: 1024px){body:before{content:\"desktop\"}}.book-details .paper-container{width:100%;max-width:1440px;margin:0 auto;display:flex;flex-direction:row;position:relative}@media (max-width: 428px){.book-details .paper-container{padding-left:18px;padding-right:18px}}@media (min-width: 429px) and (max-width: 768px){.book-details .paper-container{padding-left:20px;padding-right:20px}}@media (min-width: 769px){.book-details .paper-container{padding-left:20px;padding-right:20px}}.book-details .paper-container .book-cover{width:200px;margin-right:30px;padding-top:25px;padding-right:30px}.book-details .paper-container .book-cover img{width:100%}.book-details .paper-container .book-info{margin-right:30px;flex-basis:50%}.book-details .paper-container .characters{margin:0 30px;padding-bottom:30px;flex-basis:33%}.book-details .paper-container .characters .list{max-height:80vh;overflow:hidden;overflow-y:scroll}.book-details .paper-container .characters .list .link-crawl{display:block}\n\nbody:before{content:\"mobile\";display:none}@media (min-width: 768px){body:before{content:\"tablet\"}}@media (min-width: 1024px){body:before{content:\"desktop\"}}.house-details .paper-container{width:100%;max-width:1440px;margin:0 auto;display:flex;flex-direction:row;position:relative}@media (max-width: 428px){.house-details .paper-container{padding-left:18px;padding-right:18px}}@media (min-width: 429px) and (max-width: 768px){.house-details .paper-container{padding-left:20px;padding-right:20px}}@media (min-width: 769px){.house-details .paper-container{padding-left:20px;padding-right:20px}}.house-details .paper-container .house-info{margin-right:30px;flex-basis:50%}.house-details .paper-container .characters{margin:0 30px;padding-bottom:30px;flex-basis:33%}.house-details .paper-container .list{max-height:80vh;overflow:hidden;overflow-y:scroll}.house-details .paper-container .list .link-crawl{display:block}\n\nbody:before{content:\"mobile\";display:none}@media (min-width: 768px){body:before{content:\"tablet\"}}@media (min-width: 1024px){body:before{content:\"desktop\"}}.character-details .paper-container{width:100%;max-width:1440px;margin:0 auto;display:flex;flex-direction:row;position:relative}@media (max-width: 428px){.character-details .paper-container{padding-left:18px;padding-right:18px}}@media (min-width: 429px) and (max-width: 768px){.character-details .paper-container{padding-left:20px;padding-right:20px}}@media (min-width: 769px){.character-details .paper-container{padding-left:20px;padding-right:20px}}.character-details .paper-container .info{margin-right:30px;flex-basis:50%}.character-details .paper-container .books{margin:0 30px;padding-bottom:30px;flex-basis:33%}.character-details .paper-container .books .list{max-height:80vh;overflow:hidden;overflow-y:scroll}.character-details .paper-container .books .list .link-crawl{display:block}\n\n","/**\n * https://css-tricks.com/box-sizing/\n */\n@mixin universal-box-sizing() {\n  html {\n    box-sizing: border-box;\n  }\n\n  *,\n  *:before,\n  *:after {\n    box-sizing: inherit;\n  }\n}\n\n/**\n * Components styles helper mixin\n */\n@mixin component($name, $this: &) {\n  #{$name} {\n    $this: &;\n    @content;\n  }\n}\n\n/**\n * https://developer.mozilla.org/en-US/docs/Web/CSS/:focus-visible\n * Disable focus outline on clicks\n */\n@mixin focus-visible() {\n  *:focus {\n    outline: none;\n  }\n\n  *:focus-visible {\n    outline: 3px solid get-color(cyan);\n  }\n}\n","@import './styles/core';\n\n@include universal-box-sizing();\n@include focus-visible();\n\n// Global Styles\n\nhtml,\nbody {\n  margin: 0;\n  scroll-padding-top: map-get($primary-header-heights, mobile);\n\n  // Desktop\n  @include media('>tablet') {\n    scroll-padding-top: map-get($primary-header-heights, desktop);\n  }\n}\n\nbody {\n  font-family: get-font(body1);\n  -webkit-font-smoothing: antialiased;\n  -moz-osx-font-smoothing: grayscale;\n}\n\nmain {\n  @include container($direction: column);\n  $header-group-height: map-get($primary-header-heights, mobile);\n\n  --header-group-height: #{$header-group-height};\n  padding-top: var(--header-group-height);\n\n  // Tablet and Up\n  @include media('>=tablet') {\n    $header-group-height: map-get($primary-header-heights, desktop);\n\n    --header-group-height: #{$header-group-height};\n    padding-top: var(--header-group-height);\n  }\n\n  padding-bottom: get-spacing(xxl);\n}\n\ncode {\n  font-family: source-code-pro, Menlo, Monaco, Consolas, 'Courier New', monospace;\n}\n\n.container {\n  @include container();\n}\n\n.link {\n  color: get-color(secondary);\n}\n\n.inset-padding {\n  padding: get-spacing(lg);\n}\n\n@include component('.footer') {\n  background-color: get-color(light);\n  padding: get-spacing(md) 0;\n  display: flex;\n\n  &__container {\n    @include container($direction: row);\n  }\n\n  &__copyright {\n    @include label(small);\n  }\n}\n","// https://eduardoboucas.github.io/include-media/#overview\n// Breakpoints for _breakpoints.scss\n$breakpoints: (\n  mobile: 428px,\n  tablet: 768px,\n  desktop: 1024px,\n) !default;\n\n// Grid settings for _grid.scss\n$grid-settings: (\n  max-width: 1440px,\n  gutters: (\n    mobile: 18px,\n    tablet: 20px,\n    desktop: 20px,\n  ),\n) !default;\n\n// Header Heights\n$primary-header-heights: (\n  mobile: 50px,\n  tablet: 60px,\n  desktop: 60px,\n) !default;\n\n$secondary-header-heights: (\n  mobile: 50px,\n  tablet: 54px,\n  desktop: 54px,\n) !default;\n","// https://fonts.google.com/specimen/Poppins\n\n@import url('https://fonts.googleapis.com/css2?family=Poppins:wght@300;400;500;600;700;800&display=swap');\n@import url('https://fonts.googleapis.com/css2?family=Open+Sans:wght@300;400;600;700&display=swap');\n\n$poppins-family: 'Poppins', sans-serif;\n$open-sans-family: 'Open Sans', sans-serif;\n\n$fonts: (\n  header: $poppins-family,\n  label: $poppins-family,\n  body1: $open-sans-family,\n) !default;\n\n$font-weights: (\n  light: 300,\n  regular: 400,\n  medium: 500,\n  semiBold: 600,\n  bold: 700,\n) !default;\n","// https://eduardoboucas.github.io/include-media/#overview\n@import '~include-media/dist/_include-media.scss';\n\n@mixin container($direction: row, $display: flex) {\n  width: 100%;\n  max-width: map-get($grid-settings, max-width);\n  margin: 0 auto;\n  display: $display;\n  flex-direction: $direction;\n  position: relative;\n\n  @include media('<=mobile') {\n    padding-left: get-gutter(mobile);\n    padding-right: get-gutter(mobile);\n  }\n\n  @include media('>mobile', '<=tablet') {\n    padding-left: get-gutter(tablet);\n    padding-right: get-gutter(tablet);\n  }\n\n  @include media('>tablet') {\n    padding-left: get-gutter(desktop);\n    padding-right: get-gutter(desktop);\n  }\n}\n","$universal-spacing: (\n  mobile: (\n    xs: 5px,\n    sm: 10px,\n    md: 15px,\n    lg: 20px,\n    xl: 25px,\n    xxl: 30px,\n  ),\n  desktop: (\n    xs: 10px,\n    sm: 15px,\n    md: 20px,\n    lg: 25px,\n    xl: 30px,\n    xxl: 35px,\n  ),\n) !default;\n","@charset \"UTF-8\";\n\n//     _            _           _                           _ _\n//    (_)          | |         | |                         | (_)\n//     _ _ __   ___| |_   _  __| | ___   _ __ ___   ___  __| |_  __ _\n//    | | '_ \\ / __| | | | |/ _` |/ _ \\ | '_ ` _ \\ / _ \\/ _` | |/ _` |\n//    | | | | | (__| | |_| | (_| |  __/ | | | | | |  __/ (_| | | (_| |\n//    |_|_| |_|\\___|_|\\__,_|\\__,_|\\___| |_| |_| |_|\\___|\\__,_|_|\\__,_|\n//\n//      Simple, elegant and maintainable media queries in Sass\n//                        v1.4.9\n//\n//                http://include-media.com\n//\n//         Authors: Eduardo Boucas (@eduardoboucas)\n//                  Hugo Giraudel (@hugogiraudel)\n//\n//      This project is licensed under the terms of the MIT license\n\n\n////\n/// include-media library public configuration\n/// @author Eduardo Boucas\n/// @access public\n////\n\n\n///\n/// Creates a list of global breakpoints\n///\n/// @example scss - Creates a single breakpoint with the label `phone`\n///  $breakpoints: ('phone': 320px);\n///\n$breakpoints: (\n  'phone': 320px,\n  'tablet': 768px,\n  'desktop': 1024px\n) !default;\n\n\n///\n/// Creates a list of static expressions or media types\n///\n/// @example scss - Creates a single media type (screen)\n///  $media-expressions: ('screen': 'screen');\n///\n/// @example scss - Creates a static expression with logical disjunction (OR operator)\n///  $media-expressions: (\n///    'retina2x': '(-webkit-min-device-pixel-ratio: 2), (min-resolution: 192dpi)'\n///  );\n///\n$media-expressions: (\n  'screen': 'screen',\n  'print': 'print',\n  'handheld': 'handheld',\n  'landscape': '(orientation: landscape)',\n  'portrait': '(orientation: portrait)',\n  'retina2x': '(-webkit-min-device-pixel-ratio: 2), (min-resolution: 192dpi), (min-resolution: 2dppx)',\n  'retina3x': '(-webkit-min-device-pixel-ratio: 3), (min-resolution: 350dpi), (min-resolution: 3dppx)'\n) !default;\n\n\n///\n/// Defines a number to be added or subtracted from each unit when declaring breakpoints with exclusive intervals\n///\n/// @example scss - Interval for pixels is defined as `1` by default\n///  @include media('>128px') {}\n///\n///  /* Generates: */\n///  @media (min-width: 129px) {}\n///\n/// @example scss - Interval for ems is defined as `0.01` by default\n///  @include media('>20em') {}\n///\n///  /* Generates: */\n///  @media (min-width: 20.01em) {}\n///\n/// @example scss - Interval for rems is defined as `0.1` by default, to be used with `font-size: 62.5%;`\n///  @include media('>2.0rem') {}\n///\n///  /* Generates: */\n///  @media (min-width: 2.1rem) {}\n///\n$unit-intervals: (\n  'px': 1,\n  'em': 0.01,\n  'rem': 0.1,\n  '': 0\n) !default;\n\n///\n/// Defines whether support for media queries is available, useful for creating separate stylesheets\n/// for browsers that don't support media queries.\n///\n/// @example scss - Disables support for media queries\n///  $im-media-support: false;\n///  @include media('>=tablet') {\n///    .foo {\n///      color: tomato;\n///    }\n///  }\n///\n///  /* Generates: */\n///  .foo {\n///    color: tomato;\n///  }\n///\n$im-media-support: true !default;\n\n///\n/// Selects which breakpoint to emulate when support for media queries is disabled. Media queries that start at or\n/// intercept the breakpoint will be displayed, any others will be ignored.\n///\n/// @example scss - This media query will show because it intercepts the static breakpoint\n///  $im-media-support: false;\n///  $im-no-media-breakpoint: 'desktop';\n///  @include media('>=tablet') {\n///    .foo {\n///      color: tomato;\n///    }\n///  }\n///\n///  /* Generates: */\n///  .foo {\n///    color: tomato;\n///  }\n///\n/// @example scss - This media query will NOT show because it does not intercept the desktop breakpoint\n///  $im-media-support: false;\n///  $im-no-media-breakpoint: 'tablet';\n///  @include media('>=desktop') {\n///    .foo {\n///      color: tomato;\n///    }\n///  }\n///\n///  /* No output */\n///\n$im-no-media-breakpoint: 'desktop' !default;\n\n///\n/// Selects which media expressions are allowed in an expression for it to be used when media queries\n/// are not supported.\n///\n/// @example scss - This media query will show because it intercepts the static breakpoint and contains only accepted media expressions\n///  $im-media-support: false;\n///  $im-no-media-breakpoint: 'desktop';\n///  $im-no-media-expressions: ('screen');\n///  @include media('>=tablet', 'screen') {\n///    .foo {\n///      color: tomato;\n///    }\n///  }\n///\n///   /* Generates: */\n///   .foo {\n///     color: tomato;\n///   }\n///\n/// @example scss - This media query will NOT show because it intercepts the static breakpoint but contains a media expression that is not accepted\n///  $im-media-support: false;\n///  $im-no-media-breakpoint: 'desktop';\n///  $im-no-media-expressions: ('screen');\n///  @include media('>=tablet', 'retina2x') {\n///    .foo {\n///      color: tomato;\n///    }\n///  }\n///\n///  /* No output */\n///\n$im-no-media-expressions: ('screen', 'portrait', 'landscape') !default;\n\n////\n/// Cross-engine logging engine\n/// @author Hugo Giraudel\n/// @access private\n////\n\n\n///\n/// Log a message either with `@error` if supported\n/// else with `@warn`, using `feature-exists('at-error')`\n/// to detect support.\n///\n/// @param {String} $message - Message to log\n///\n@function im-log($message) {\n  @if feature-exists('at-error') {\n    @error $message;\n  } @else {\n    @warn $message;\n    $_: noop();\n  }\n\n  @return $message;\n}\n\n\n///\n/// Wrapper mixin for the log function so it can be used with a more friendly\n/// API than `@if im-log('..') {}` or `$_: im-log('..')`. Basically, use the function\n/// within functions because it is not possible to include a mixin in a function\n/// and use the mixin everywhere else because it's much more elegant.\n///\n/// @param {String} $message - Message to log\n///\n@mixin log($message) {\n  @if im-log($message) {}\n}\n\n\n///\n/// Function with no `@return` called next to `@warn` in Sass 3.3\n/// to trigger a compiling error and stop the process.\n///\n@function noop() {}\n\n///\n/// Determines whether a list of conditions is intercepted by the static breakpoint.\n///\n/// @param {Arglist}   $conditions  - Media query conditions\n///\n/// @return {Boolean} - Returns true if the conditions are intercepted by the static breakpoint\n///\n@function im-intercepts-static-breakpoint($conditions...) {\n  $no-media-breakpoint-value: map-get($breakpoints, $im-no-media-breakpoint);\n\n  @if not $no-media-breakpoint-value {\n    @if im-log('`#{$im-no-media-breakpoint}` is not a valid breakpoint.') {}\n  }\n\n  @each $condition in $conditions {\n    @if not map-has-key($media-expressions, $condition) {\n      $operator: get-expression-operator($condition);\n      $prefix: get-expression-prefix($operator);\n      $value: get-expression-value($condition, $operator);\n\n      // scss-lint:disable SpaceAroundOperator\n      @if ($prefix == 'max' and $value <= $no-media-breakpoint-value) or\n          ($prefix == 'min' and $value > $no-media-breakpoint-value) {\n        @return false;\n      }\n    } @else if not index($im-no-media-expressions, $condition) {\n      @return false;\n    }\n  }\n\n  @return true;\n}\n\n////\n/// Parsing engine\n/// @author Hugo Giraudel\n/// @access private\n////\n\n\n///\n/// Get operator of an expression\n///\n/// @param {String} $expression - Expression to extract operator from\n///\n/// @return {String} - Any of `>=`, `>`, `<=`, `<`, `≥`, `≤`\n///\n@function get-expression-operator($expression) {\n  @each $operator in ('>=', '>', '<=', '<', '≥', '≤') {\n    @if str-index($expression, $operator) {\n      @return $operator;\n    }\n  }\n\n  // It is not possible to include a mixin inside a function, so we have to\n  // rely on the `im-log(..)` function rather than the `log(..)` mixin. Because\n  // functions cannot be called anywhere in Sass, we need to hack the call in\n  // a dummy variable, such as `$_`. If anybody ever raise a scoping issue with\n  // Sass 3.3, change this line in `@if im-log(..) {}` instead.\n  $_: im-log('No operator found in `#{$expression}`.');\n}\n\n\n///\n/// Get dimension of an expression, based on a found operator\n///\n/// @param {String} $expression - Expression to extract dimension from\n/// @param {String} $operator - Operator from `$expression`\n///\n/// @return {String} - `width` or `height` (or potentially anything else)\n///\n@function get-expression-dimension($expression, $operator) {\n  $operator-index: str-index($expression, $operator);\n  $parsed-dimension: str-slice($expression, 0, $operator-index - 1);\n  $dimension: 'width';\n\n  @if str-length($parsed-dimension) > 0 {\n    $dimension: $parsed-dimension;\n  }\n\n  @return $dimension;\n}\n\n\n///\n/// Get dimension prefix based on an operator\n///\n/// @param {String} $operator - Operator\n///\n/// @return {String} - `min` or `max`\n///\n@function get-expression-prefix($operator) {\n  @return if(index(('<', '<=', '≤'), $operator), 'max', 'min');\n}\n\n\n///\n/// Get value of an expression, based on a found operator\n///\n/// @param {String} $expression - Expression to extract value from\n/// @param {String} $operator - Operator from `$expression`\n///\n/// @return {Number} - A numeric value\n///\n@function get-expression-value($expression, $operator) {\n  $operator-index: str-index($expression, $operator);\n  $value: str-slice($expression, $operator-index + str-length($operator));\n\n  @if map-has-key($breakpoints, $value) {\n    $value: map-get($breakpoints, $value);\n  } @else {\n    $value: to-number($value);\n  }\n\n  $interval: map-get($unit-intervals, unit($value));\n\n  @if not $interval {\n    // It is not possible to include a mixin inside a function, so we have to\n    // rely on the `im-log(..)` function rather than the `log(..)` mixin. Because\n    // functions cannot be called anywhere in Sass, we need to hack the call in\n    // a dummy variable, such as `$_`. If anybody ever raise a scoping issue with\n    // Sass 3.3, change this line in `@if im-log(..) {}` instead.\n    $_: im-log('Unknown unit `#{unit($value)}`.');\n  }\n\n  @if $operator == '>' {\n    $value: $value + $interval;\n  } @else if $operator == '<' {\n    $value: $value - $interval;\n  }\n\n  @return $value;\n}\n\n\n///\n/// Parse an expression to return a valid media-query expression\n///\n/// @param {String} $expression - Expression to parse\n///\n/// @return {String} - Valid media query\n///\n@function parse-expression($expression) {\n  // If it is part of $media-expressions, it has no operator\n  // then there is no need to go any further, just return the value\n  @if map-has-key($media-expressions, $expression) {\n    @return map-get($media-expressions, $expression);\n  }\n\n  $operator: get-expression-operator($expression);\n  $dimension: get-expression-dimension($expression, $operator);\n  $prefix: get-expression-prefix($operator);\n  $value: get-expression-value($expression, $operator);\n\n  @return '(#{$prefix}-#{$dimension}: #{$value})';\n}\n\n///\n/// Slice `$list` between `$start` and `$end` indexes\n///\n/// @access private\n///\n/// @param {List} $list - List to slice\n/// @param {Number} $start [1] - Start index\n/// @param {Number} $end [length($list)] - End index\n///\n/// @return {List} Sliced list\n///\n@function slice($list, $start: 1, $end: length($list)) {\n  @if length($list) < 1 or $start > $end {\n    @return ();\n  }\n\n  $result: ();\n\n  @for $i from $start through $end {\n    $result: append($result, nth($list, $i));\n  }\n\n  @return $result;\n}\n\n////\n/// String to number converter\n/// @author Hugo Giraudel\n/// @access private\n////\n\n\n///\n/// Casts a string into a number\n///\n/// @param {String | Number} $value - Value to be parsed\n///\n/// @return {Number}\n///\n@function to-number($value) {\n  @if type-of($value) == 'number' {\n    @return $value;\n  } @else if type-of($value) != 'string' {\n    $_: im-log('Value for `to-number` should be a number or a string.');\n  }\n\n  $first-character: str-slice($value, 1, 1);\n  $result: 0;\n  $digits: 0;\n  $minus: ($first-character == '-');\n  $numbers: ('0': 0, '1': 1, '2': 2, '3': 3, '4': 4, '5': 5, '6': 6, '7': 7, '8': 8, '9': 9);\n\n  // Remove +/- sign if present at first character\n  @if ($first-character == '+' or $first-character == '-') {\n    $value: str-slice($value, 2);\n  }\n\n  @for $i from 1 through str-length($value) {\n    $character: str-slice($value, $i, $i);\n\n    @if not (index(map-keys($numbers), $character) or $character == '.') {\n      @return to-length(if($minus, -$result, $result), str-slice($value, $i))\n    }\n\n    @if $character == '.' {\n      $digits: 1;\n    } @else if $digits == 0 {\n      $result: $result * 10 + map-get($numbers, $character);\n    } @else {\n      $digits: $digits * 10;\n      $result: $result + map-get($numbers, $character) / $digits;\n    }\n  }\n\n  @return if($minus, -$result, $result);\n}\n\n\n///\n/// Add `$unit` to `$value`\n///\n/// @param {Number} $value - Value to add unit to\n/// @param {String} $unit - String representation of the unit\n///\n/// @return {Number} - `$value` expressed in `$unit`\n///\n@function to-length($value, $unit) {\n  $units: ('px': 1px, 'cm': 1cm, 'mm': 1mm, '%': 1%, 'ch': 1ch, 'pc': 1pc, 'in': 1in, 'em': 1em, 'rem': 1rem, 'pt': 1pt, 'ex': 1ex, 'vw': 1vw, 'vh': 1vh, 'vmin': 1vmin, 'vmax': 1vmax);\n\n  @if not index(map-keys($units), $unit) {\n    $_: im-log('Invalid unit `#{$unit}`.');\n  }\n\n  @return $value * map-get($units, $unit);\n}\n\n///\n/// This mixin aims at redefining the configuration just for the scope of\n/// the call. It is helpful when having a component needing an extended\n/// configuration such as custom breakpoints (referred to as tweakpoints)\n/// for instance.\n///\n/// @author Hugo Giraudel\n///\n/// @param {Map} $tweakpoints [()] - Map of tweakpoints to be merged with `$breakpoints`\n/// @param {Map} $tweak-media-expressions [()] - Map of tweaked media expressions to be merged with `$media-expression`\n///\n/// @example scss - Extend the global breakpoints with a tweakpoint\n///  @include media-context(('custom': 678px)) {\n///    .foo {\n///      @include media('>phone', '<=custom') {\n///       // ...\n///      }\n///    }\n///  }\n///\n/// @example scss - Extend the global media expressions with a custom one\n///  @include media-context($tweak-media-expressions: ('all': 'all')) {\n///    .foo {\n///      @include media('all', '>phone') {\n///       // ...\n///      }\n///    }\n///  }\n///\n/// @example scss - Extend both configuration maps\n///  @include media-context(('custom': 678px), ('all': 'all')) {\n///    .foo {\n///      @include media('all', '>phone', '<=custom') {\n///       // ...\n///      }\n///    }\n///  }\n///\n@mixin media-context($tweakpoints: (), $tweak-media-expressions: ()) {\n  // Save global configuration\n  $global-breakpoints: $breakpoints;\n  $global-media-expressions: $media-expressions;\n\n  // Update global configuration\n  $breakpoints: map-merge($breakpoints, $tweakpoints) !global;\n  $media-expressions: map-merge($media-expressions, $tweak-media-expressions) !global;\n\n  @content;\n\n  // Restore global configuration\n  $breakpoints: $global-breakpoints !global;\n  $media-expressions: $global-media-expressions !global;\n}\n\n////\n/// include-media public exposed API\n/// @author Eduardo Boucas\n/// @access public\n////\n\n\n///\n/// Generates a media query based on a list of conditions\n///\n/// @param {Arglist}   $conditions  - Media query conditions\n///\n/// @example scss - With a single set breakpoint\n///  @include media('>phone') { }\n///\n/// @example scss - With two set breakpoints\n///  @include media('>phone', '<=tablet') { }\n///\n/// @example scss - With custom values\n///  @include media('>=358px', '<850px') { }\n///\n/// @example scss - With set breakpoints with custom values\n///  @include media('>desktop', '<=1350px') { }\n///\n/// @example scss - With a static expression\n///  @include media('retina2x') { }\n///\n/// @example scss - Mixing everything\n///  @include media('>=350px', '<tablet', 'retina3x') { }\n///\n@mixin media($conditions...) {\n  // scss-lint:disable SpaceAroundOperator\n  @if ($im-media-support and length($conditions) == 0) or\n      (not $im-media-support and im-intercepts-static-breakpoint($conditions...)) {\n    @content;\n  } @else if ($im-media-support and length($conditions) > 0) {\n    @media #{unquote(parse-expression(nth($conditions, 1)))} {\n      // Recursive call\n      @include media(slice($conditions, 2)...) {\n        @content;\n      }\n    }\n  }\n}\n","$colors: (\n  primary: #23282f,\n  secondary: #24b0f5,\n  white: #fff,\n  border: #ededed,\n  light: #ededed,\n  display-1: #23282f,\n);\n","@mixin header($key: h3, $responsive: true) {\n  $header-sizes: (\n    mobile: (\n      h1: 30px,\n      h2: 14px,\n      h3: 21px,\n      h4: 18px,\n      h5: 16px,\n      h6: 14px,\n    ),\n    desktop: (\n      h1: 32px,\n      h2: 18px,\n      h3: 24px,\n      h4: 20px,\n      h5: 18px,\n      h6: 16px,\n    ),\n  ) !default;\n\n  $header-weights: (\n    mobile: (\n      h1: get-font-weight(bold),\n      h2: get-font-weight(bold),\n      h3: get-font-weight(bold),\n      h4: get-font-weight(bold),\n      h5: get-font-weight(bold),\n      h6: get-font-weight(bold),\n    ),\n    desktop: (\n      h1: get-font-weight(bold),\n      h2: get-font-weight(bold),\n      h3: get-font-weight(bold),\n      h4: get-font-weight(bold),\n      h5: get-font-weight(bold),\n      h6: get-font-weight(bold),\n    ),\n  ) !default;\n\n  font-family: get-font(header);\n  font-size: map-get(map-get($header-sizes, mobile), $key);\n  font-weight: map-get(map-get($header-weights, mobile), $key);\n  line-height: 1.1;\n\n  @if $responsive {\n    @include media('>tablet') {\n      font-size: map-get(map-get($header-sizes, desktop), $key);\n      font-weight: map-get(map-get($header-weights, desktop), $key);\n    }\n  }\n}\n\n/**\n * Usage @include label(default)\n */\n@mixin label($key: default, $responsive: true) {\n  $label-sizes: (\n    mobile: (\n      default: 14px,\n      table-header: 12px,\n      table-data: 12px,\n      medium-regular: 14px,\n      medium-semibold: 14px,\n      menu-item: 14px,\n      nav-item: 14px,\n      input: 14px,\n      small: 12px,\n    ),\n    desktop: (\n      default: 16px,\n      table-header: 14px,\n      table-data: 14px,\n      medium-regular: 14px,\n      medium-semibold: 14px,\n      menu-item: 14px,\n      nav-item: 14px,\n      input: 14px,\n      small: 12px,\n    ),\n  ) !default;\n\n  $label-weight: (\n    mobile: (\n      default: get-font-weight(medium),\n      table-header: get-font-weight(semiBold),\n      table-data: get-font-weight(regular),\n      medium-regular: get-font-weight(regular),\n      medium-semibold: get-font-weight(semiBold),\n      menu-item: get-font-weight(regular),\n      nav-item: get-font-weight(semiBold),\n    ),\n    desktop: (\n      default: get-font-weight(medium),\n      table-header: get-font-weight(semiBold),\n      table-data: get-font-weight(regular),\n      medium-regular: get-font-weight(regular),\n      medium-semibold: get-font-weight(semiBold),\n      menu-item: get-font-weight(regular),\n      nav-item: get-font-weight(semiBold),\n    ),\n  ) !default;\n\n  font-family: get-font(label);\n  font-size: map-get(map-get($label-sizes, mobile), $key);\n  font-weight: map-get(map-get($label-weight, mobile), $key);\n  line-height: 1.15;\n\n  @if $responsive {\n    @include media('>tablet') {\n      font-size: map-get(map-get($label-sizes, desktop), $key);\n      font-weight: map-get(map-get($label-weight, desktop), $key);\n    }\n  }\n}\n","@import '../../styles/core';\n\n@include component('.primary-header') {\n  $this: &;\n\n  width: 100%;\n  background-color: get-color(light);\n  display: flex;\n  align-items: center;\n\n  // Inner Container\n  &__container {\n    @include container($direction: row);\n  }\n\n  &__title {\n    @include header(h3);\n    margin-right: get-spacing(xxl);\n\n    a {\n      color: get-color(primary);\n      text-decoration: none;\n    }\n  }\n\n  &__nav {\n    @include label(nav-item);\n    color: get-color(primary);\n    display: inline-flex;\n    align-items: center;\n\n    &__item {\n      margin: 0 get-spacing(md);\n      display: inline-flex;\n      color: get-color(primary);\n\n      &--active {\n        color: get-color(secondary);\n      }\n    }\n  }\n}\n\n// https://github.com/WickyNilliams/headroom.js\n// Sticky Header animation\n@include component('.headroom') {\n  $header-height: map-get($primary-header-heights, mobile);\n\n  width: 100%;\n  position: fixed;\n  top: 0;\n  will-change: transform;\n  transition: transform 200ms ease-in-out;\n  z-index: 10;\n\n  &--pinned {\n    transform: translateY(0%);\n  }\n\n  &--unpinned {\n    transform: translateY(calc(-#{$header-height}));\n  }\n\n  // Tablet and Up\n  @include media('>mobile') {\n    $header-height: map-get($primary-header-heights, desktop);\n\n    &--pinned {\n      transform: translateY(0%);\n    }\n\n    &--unpinned {\n      transform: translateY(calc(-#{$header-height}));\n    }\n  }\n}\n","@import '../../styles/core';\n\n@include component('.page-loader') {\n  width: 100%;\n  height: 100%;\n  min-height: 50vh;\n  display: flex;\n  position: relative;\n  justify-content: center;\n  align-items: center;\n}\n","@import '../../styles/core';\n\n@include component('.data-table') {\n  $this: &;\n  $sort-icon-size: 16px;\n  $thumbnail-size: 80px;\n\n  width: 100%;\n  padding: get-spacing(lg) 0;\n  text-align: left;\n\n  .thumbnail {\n    width: $thumbnail-size;\n    display: block;\n  }\n\n  table {\n    width: 100%;\n    border-collapse: separate;\n  }\n\n  th {\n    padding: get-spacing(md) get-spacing(sm);\n    border-bottom: 1px solid get-color(border);\n    vertical-align: middle;\n\n    .header-label {\n      display: inline-flex;\n      margin-right: get-spacing(sm);\n    }\n  }\n\n  td {\n    padding: get-spacing(md) get-spacing(sm);\n    vertical-align: top;\n    border-bottom: 1px solid get-color(border);\n  }\n\n  .details-column-content {\n    max-width: 450px;\n    max-height: 200px;\n    overflow: hidden;\n    overflow-y: scroll;\n\n    .link-crawl {\n      display: block;\n    }\n  }\n}\n","@import '../../styles/core';\n\n@include component('.pagination') {\n  $page-button-size: 30px;\n\n  width: 100%;\n  display: flex;\n  flex-wrap: wrap;\n  position: relative;\n  justify-content: center;\n  align-items: center;\n\n  button {\n    @include label(menu-item);\n    height: $page-button-size;\n    margin: get-spacing(xs);\n    padding: get-spacing(xs);\n    background-color: get-color(white);\n    display: inline-flex;\n    border: 1px solid get-color(border);\n    align-items: center;\n    justify-content: center;\n    cursor: pointer;\n  }\n\n  &__button-page {\n    width: $page-button-size;\n\n    &--active {\n      color: get-color(secondary);\n    }\n  }\n\n  &__button-prev,\n  &__button-next,\n  &__button-last {\n    padding: get-spacing(xs) get-spacing(md) !important;\n  }\n\n  select {\n    @include label(menu-item);\n    height: $page-button-size;\n    margin: 0 get-spacing(xs);\n    padding: get-spacing(xs);\n    background-color: get-color(white);\n    display: inline-flex;\n    border: 1px solid get-color(border);\n    align-items: center;\n    justify-content: center;\n  }\n}\n","@import '../../styles/core';\n\n@include component('.link-crawl') {\n  margin-bottom: get-spacing(md);\n}\n","@import '../../styles/core';\n\n@include component('.book-details') {\n  .paper-container {\n    @include container;\n\n    .book-cover {\n      width: 200px;\n      margin-right: get-spacing(xxl);\n      padding-top: get-spacing(xl);\n      padding-right: get-spacing(xxl);\n\n      img {\n        width: 100%;\n      }\n    }\n\n    .book-info {\n      margin-right: get-spacing(xxl);\n      flex-basis: 50%;\n    }\n\n    .characters {\n      margin: 0 get-spacing(xxl);\n      padding-bottom: get-spacing(xxl);\n      flex-basis: 33%;\n\n      .list {\n        max-height: 80vh;\n        overflow: hidden;\n        overflow-y: scroll;\n\n        .link-crawl {\n          display: block;\n        }\n      }\n    }\n  }\n}\n","@import '../../styles/core';\n\n@include component('.house-details') {\n  .paper-container {\n    @include container;\n\n    .house-info {\n      margin-right: get-spacing(xxl);\n      flex-basis: 50%;\n    }\n\n    .characters {\n      margin: 0 get-spacing(xxl);\n      padding-bottom: get-spacing(xxl);\n      flex-basis: 33%;\n    }\n\n    .list {\n      max-height: 80vh;\n      overflow: hidden;\n      overflow-y: scroll;\n\n      .link-crawl {\n        display: block;\n      }\n    }\n  }\n}\n","/**\n * $breakpoint in config.scss\n * https://eduardoboucas.github.io/include-media/#overview\n * https://github.com/matthewhall/react-use-css-breakpoints#readme\n */\n\nbody {\n  @for $i from 1 through length($breakpoints) {\n    $breakpoint: nth($breakpoints, $i);\n    $key: nth($breakpoint, 1);\n    $value: nth($breakpoint, 2);\n\n    @if $breakpoint == nth($breakpoints, 1) {\n      &:before {\n        content: '#{$key}';\n        display: none;\n      }\n    } @else {\n      @media (min-width: $value) {\n        &:before {\n          content: '#{$key}';\n        }\n      }\n    }\n  }\n}\n","@import '../../styles/core';\n\n@include component('.character-details') {\n  .paper-container {\n    @include container;\n\n    .info {\n      margin-right: get-spacing(xxl);\n      flex-basis: 50%;\n    }\n\n    .books {\n      margin: 0 get-spacing(xxl);\n      padding-bottom: get-spacing(xxl);\n      flex-basis: 33%;\n\n      .list {\n        max-height: 80vh;\n        overflow: hidden;\n        overflow-y: scroll;\n\n        .link-crawl {\n          display: block;\n        }\n      }\n    }\n  }\n}\n"]}